{
  "classes": {
    "BidBuyRiceAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/BidBuyRiceAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "auctionID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "BidSellRiceAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/BidSellRiceAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "auctionID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "BidUniqueAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/BidUniqueAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "boolean",
                  "extendCloseDate"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetActiveResourceAuctionList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/GetActiveResourceAuctionList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetUniqueItemAuctionDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/GetUniqueItemAuctionDetail.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "auctionID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true,
            "auction": {}
          }
        }
      },
      "constants": {}
    },
    "GetUniqueItemAuctionList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/GetUniqueItemAuctionList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "OpenBuyRiceAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/OpenBuyRiceAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "finishBidAmount"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "OpenSellRiceAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/OpenSellRiceAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "finishBidAmount"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "OpenUniqueAuction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Auction/OpenUniqueAuction.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "keyExists",
                  "itemID",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "Bet": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Betting/Bet.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "min",
                  "amount",
                  "10"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetBettingDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Betting/GetBettingDetail.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "betting_id"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetBettingList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Betting/GetBettingList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "in",
                  "req",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "베팅장",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetReservedCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/NationCommand/GetReservedCommand.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "사령부",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation_turn",
                        {},
                        "nation_id = %i AND officer_level IN %li AND turn_idx < 0",
                        "offsetlookup",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation_turn",
                        {},
                        "nation_id = %i AND officer_level IN %li AND turn_idx >= %i",
                        "offsetlookup",
                        "call",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "PushCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/NationCommand/PushCommand.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "max",
                  "amount",
                  "12"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushNationCommand",
                "args": [
                  "offsetlookup",
                  "offsetlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "RepeatCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/NationCommand/RepeatCommand.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "max",
                  "amount",
                  "12"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "repeatNationCommand",
                "args": [
                  "offsetlookup",
                  "offsetlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "ReserveBulkCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/NationCommand/ReserveBulkCommand.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true,
            "reason": "success"
          }
        }
      },
      "constants": {}
    },
    "ReserveCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/NationCommand/ReserveCommand.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integerArray",
                  "turnList"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "BuildNationCandidate": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/BuildNationCandidate.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "사전 거병",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "generalObj",
                "method": "setVar",
                "args": [
                  "killturn",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "generalObj",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "DieOnPrestart": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/DieOnPrestart.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "장수 삭제",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "trigger_error",
                      "args": [
                        "encapsed",
                        "name"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "generalObj",
                "method": "kill",
                "args": [
                  "variable",
                  true,
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "session",
                "method": "logoutGame",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "DropItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/DropItem.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "in",
                  "itemType",
                  "call"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "setItem",
                "args": [
                  "variable",
                  "None"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetCommandTable": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/GetCommandTable.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetFrontInfo": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/GetFrontInfo.php",
      "properties": {},
      "methods": {
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "lastWorldHistoryID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getGlobalRecord": {
          "params": [
            "lastRecordID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralRecord": {
          "params": [
            "generalID",
            "lastRecordID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getHistory": {
          "params": [
            "lastHistoryID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "generateRecentRecord": {
          "params": [
            "generalID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "generateGlobalInfo": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "generateNationInfo": {
          "params": [
            "db",
            "general",
            "rawNation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {
                        "cityCnt": "0",
                        "now": "0",
                        "max": "0"
                      }
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "full": true,
            "type": {}
          }
        },
        "generateDummyNationInfo": {
          "params": [
            "db",
            "general",
            "rawNation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "id": "0",
            "full": false,
            "population": {
              "cityCnt": "0",
              "now": "0",
              "max": "0"
            },
            "crew": {
              "generalCnt": "0",
              "now": "0",
              "max": "0"
            },
            "type": {
              "raw": "None",
              "name": "-",
              "pros": "",
              "cons": ""
            },
            "onlineGen": "",
            "notice": "",
            "topChiefs": {},
            "impossibleStrategicCommand": {}
          }
        },
        "generateGeneralInfo": {
          "params": [
            "db",
            "general",
            "rawNation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {
                  "leader": {}
                }
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "generateCityInfo": {
          "params": [
            "db",
            "general",
            "rawNation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "nationInfo": {},
                  "pop": {},
                  "agri": {},
                  "comm": {},
                  "secu": {},
                  "def": {},
                  "wall": {}
                }
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheAll",
                "args": [
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "General/GetFrontInfo",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setRawCity",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {
        "ROW_LIMIT": "15"
      }
    },
    "GetGeneralLog": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/GetGeneralLog.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "in",
                  "reqType",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "checkPermission": {
          "params": [
            "me"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getTargetGeneralID": {
          "params": [
            "session"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "GENERAL_HISTORY": "generalHistory",
        "GENERAL_ACTION": "generalAction",
        "BATTLE_RESULT": "battleResult",
        "BATTLE_DETAIL": "battleDetail"
      }
    },
    "InstantRetreat": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/InstantRetreat.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheAll",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "접경귀환",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "call"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "Join": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/General/Join.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integerArray",
                  "inheritBonusStat"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "calcRestInheritPoint": {
          "params": [
            "userID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.8"
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "call",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "default.jpg"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "2"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "general",
                  {
                    "nation": "0",
                    "troop": "0",
                    "dedication": "0",
                    "crew": "0",
                    "train": "0",
                    "atmos": "0",
                    "officer_level": "0",
                    "killturn": "6",
                    "makelimit": "0"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "general_access_log",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "no=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "general_turn",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "rank_data",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritStor",
                      "method": "setValue",
                      "args": [
                        "previous",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "flush",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "rank_data",
                        {},
                        "general_id = %i AND type = %s",
                        "variable",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritStor",
                      "method": "setValue",
                      "args": [
                        "previous",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "삼국지 모의전투 PHP의 세계에 오신 것을 환영합니다 ^o^",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "처음 하시는 경우에는 <D>도움말</>을 참고하시고,",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "문의사항이 있으시면 게시판에 글을 남겨주시면 되겠네요~",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "부디 즐거운 삼모전 되시길 바랍니다 ^^",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralHistoryLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushAdminLog",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "rootDB",
                "method": "insert",
                "args": [
                  "member_log",
                  {
                    "action_type": "make_general"
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ExecuteEngine": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/ExecuteEngine.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GeneralList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/GeneralList.php",
      "properties": {
        "viewColumns": {
          "no": "0",
          "name": "0",
          "nation": "0",
          "npc": "0",
          "injury": "0",
          "leadership": "0",
          "strength": "0",
          "intel": "0",
          "explevel": "0",
          "dedlevel": "0",
          "gold": "0",
          "rice": "0",
          "killturn": "0",
          "picture": "0",
          "imgsvr": "0",
          "age": "0",
          "special": "0",
          "special2": "0",
          "personal": "0",
          "belong": "0",
          "troop": "0",
          "city": "0",
          "specage": "0",
          "specage2": "0",
          "leadership_exp": "1",
          "strength_exp": "1",
          "intel_exp": "1",
          "dex1": "1",
          "dex2": "1",
          "dex3": "1",
          "dex4": "1",
          "dex5": "1",
          "experience": "1",
          "dedication": "1",
          "officer_level": "1",
          "officer_city": "1",
          "defence_train": "1",
          "crewtype": "1",
          "crew": "1",
          "train": "1",
          "atmos": "1",
          "turntime": "1",
          "horse": "1",
          "weapon": "1",
          "book": "1",
          "item": "1",
          "recent_war": "1",
          "aux": "1",
          "owner_name": "9",
          "refresh_score_total": "0",
          "refresh_score": "1",
          "warnum": "1",
          "killnum": "1",
          "deathnum": "1",
          "killcrew": "1",
          "deathcrew": "1",
          "firenum": "1"
        },
        "columnRemap": {
          "special": "specialDomestic",
          "special2": "specialWar",
          "refresh_score_total": "refreshScoreTotal",
          "refresh_score": "refreshScore"
        },
        "customViewColumns": {
          "officerLevel": "0",
          "officerLevelText": "0",
          "lbonus": "0",
          "ownerName": "0",
          "honorText": "0",
          "dedLevelText": "0",
          "bill": "0",
          "reservedCommand": "1",
          "autorun_limit": "1"
        }
      },
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getOfficerLevel": {
          "params": [
            "rawGeneral"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "세력장수",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "foreach"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "foreach"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "result": true
                }
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GeneralListWithToken": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GeneralListWithToken.php",
      "properties": {
        "withToken": true
      },
      "methods": {},
      "constants": {}
    },
    "GetCachedMap": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetCachedMap.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "tryCache": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "cache",
                "method": "save",
                "args": [
                  "recent_map",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "CACHE_SECONDS": "600"
      }
    },
    "GetConst": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetConst.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "findLastModified": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCacheKey": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryCache": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "readCache": {
          "params": [
            "cache"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "extractObjClassInfo": {
          "params": [
            "objKey",
            "callerFunction"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "extractObjClassInfoFromArray": {
          "params": [
            "constArray",
            "callerFunction"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "extractObjClassInfoFromGameConst": {
          "params": [
            "gameConstKey",
            "callerFunction"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "genConstData": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "nationType": {},
                  "specialDomestic": {},
                  "specialWar": {},
                  "personality": {},
                  "item": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "cityConstMap": {}
          }
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "cache",
                "method": "save",
                "args": [
                  "staticlookup",
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {
        "CONST_API_VERSION": "3",
        "CACHE_KEY": "JSConst"
      }
    },
    "GetCurrentHistory": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetCurrentHistory.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetDiplomacy": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetDiplomacy.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "중원정보",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "uasort",
                "args": [
                  "variable",
                  "closure"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "3": "2",
                  "4": "2",
                  "5": "2",
                  "6": "2",
                  "7": "2"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetGlobalMenu": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetGlobalMenu.php",
      "properties": {},
      "methods": {
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        },
        "tryCache": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetHistory": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetHistory.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "month"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "tryCache": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getHistory": {
          "params": [
            "serverID",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "parseEtag": {
          "params": [
            "etag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getCacheKey": {
          "params": [
            "serverID",
            "year",
            "month",
            "cacheHash"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "checkCached": {
          "params": [
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "increaseRefresh",
                      "args": [
                        "연감",
                        "1"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetMap": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetMap.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "in",
                  "showMe",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetNationList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetNationList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "uasort",
                "args": [
                  "variable",
                  "closure"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetRecentRecord": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Global/GetRecentRecord.php",
      "properties": {
        "allowExternalAPI": false
      },
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "lastWorldHistoryID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getGlobalRecord": {
          "params": [
            "lastRecordID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralRecord": {
          "params": [
            "generalID",
            "lastRecordID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getHistory": {
          "params": [
            "lastHistoryID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {
        "ROW_LIMIT": "15"
      }
    },
    "BuyHiddenBuff": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/BuyHiddenBuff.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "keyExists",
                  "type",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "inheritBuff",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "BuyRandomUnique": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/BuyRandomUnique.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "inheritRandomUnique",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "CheckOwner": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/CheckOwner.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "min",
                  "destGeneralID",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "boolean",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "msg",
                      "method": "send",
                      "args": [
                        true
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "boolean",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "msg",
                      "method": "send",
                      "args": [
                        true
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetMoreLog": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/GetMoreLog.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "integer",
                  "lastID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "ResetSpecialWar": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/ResetSpecialWar.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "prev_types_special2"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "inheritResetSpecialWar",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "special2",
                  "None"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ResetStat": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/ResetStat.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integerArray",
                  "inheritBonusStat"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "leadership",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "strength",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "intel",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userStor",
                "method": "setValue",
                "args": [
                  "last_stat_reset",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ResetTurnTime": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/ResetTurnTime.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "call",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "inheritResetTurnTime",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "nextTurnTimeBase",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "SetNextSpecialWar": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/InheritAction/SetNextSpecialWar.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "in",
                  "type",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "inheritSpecificSpecialWar",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "previous",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "DecideMessageResponse": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/DecideMessageResponse.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "required",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "boolean",
                  "response"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "success"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheAll",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "DeleteMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/DeleteMessage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "required",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "integer",
                  "msgID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetContactList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/GetContactList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "GetOldMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/GetOldMessage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "in",
                  "type",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "delayFrequentCall": {
          "params": [
            "session"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "try"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "usleep",
                      "args": [
                        "200"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "delayFrequentCall",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "session",
                "method": "setReadOnly",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "result": true,
                  "keepRecent": true,
                  "sequence": "0"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetRecentMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/GetRecentMessage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "integer",
                  "sequence"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "delayFrequentCall": {
          "params": [
            "session"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "try"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "usleep",
                      "args": [
                        "200"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "delayFrequentCall",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "session",
                "method": "setReadOnly",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "array_pop",
                      "args": [
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReadLatestMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/ReadLatestMessage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "msgID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "generalStor",
                      "method": "setValue",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "SendMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Message/SendMessage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "required",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "integer",
                  "mailbox"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "lengthMin",
                  "text",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "genPublicMessage": {
          "params": [
            "src",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "genNationalMessage": {
          "params": [
            "src",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "genDiplomacyMessage": {
          "params": [
            "src",
            "destNationID",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "genPrivateMessage": {
          "params": [
            "src",
            "destGeneralID",
            "permission",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "increaseRefresh",
                "args": [
                  "서신전달",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "session",
                      "method": "logoutGame",
                      "args": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": "알 수 없는 에러입니다."
        }
      },
      "constants": {}
    },
    "UploadImage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Misc/UploadImage.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "required",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "hash_update",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "method": "mkdir",
                            "args": [
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetNationInfo": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/GetNationInfo.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "v",
                "method": "rule",
                "args": [
                  "in",
                  "full",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "cacheAll",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "result": true
                }
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "SetBill": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetBill.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "max",
                  "amount",
                  "200"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetBlockScout": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetBlockScout.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "boolean",
                  "value"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetBlockWar": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetBlockWar.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "boolean",
                  "value"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "setValue",
                "args": [
                  "available_war_setting_cnt",
                  "bin"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetNotice": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetNotice.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "lengthMax",
                  "msg",
                  "16384"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetRate": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetRate.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "max",
                  "amount",
                  "30"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetScoutMsg": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetScoutMsg.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "lengthMax",
                  "msg",
                  "1000"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetSecretLimit": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Nation/SetSecretLimit.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "max",
                  "amount",
                  "99"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "SetTroopName": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Troop/SetTroopName.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "troopID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "troop",
                  {},
                  "troop_leader=%i AND `nation`=%i",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup",
                  {},
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ExitTroop": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Troop/ExitTroop.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "handleEvent",
                      "args": [
                        "variable",
                        "nullkeyword",
                        "staticlookup",
                        {
                          "isTroopLeader": false
                        },
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "me",
                      "method": "setVar",
                      "args": [
                        "troop",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "me",
                      "method": "applyDB",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup",
                  {
                    "isTroopLeader": true
                  },
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "troop": "0"
                  },
                  "`troop` = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "troop",
                  "troop_leader = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "JoinTroop": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Troop/JoinTroop.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "troopID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "setVar",
                "args": [
                  "troop",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup",
                  {},
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "KickFromTroop": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Troop/KickFromTroop.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "generalID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup",
                  {},
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "NewTroop": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Troop/NewTroop.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "stringWidthBetween",
                  "troopName",
                  "1",
                  "18"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "troop",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "setVar",
                "args": [
                  "troop",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup",
                  {},
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "me",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "AddComment": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Vote/AddComment.php",
      "properties": {},
      "methods": {
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "int",
                  "voteID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "vote_comment",
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GetVoteDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Vote/GetVoteDetail.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integer",
                  "voteID"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GetVoteList": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Vote/GetVoteList.php",
      "properties": {},
      "methods": {
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "NewVote": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Vote/NewVote.php",
      "properties": {},
      "methods": {
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "boolean",
                  "keepOldVote"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "closeOldVote": {
          "params": [
            "voteID",
            "voteStor"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "voteStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "try"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "closeOldVote",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "voteStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "setValue",
                "args": [
                  "lastVote",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "newvote": "1"
                  },
                  true
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "Vote": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/API/Vote/Vote.php",
      "properties": {},
      "methods": {
        "getRequiredSessionMode": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "validateArgs": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rule",
                "args": [
                  "integerArray",
                  "seletion"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "launch": {
          "params": [
            "session",
            "modifiedSince",
            "reqEtag"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "sort",
                "args": [
                  "variable",
                  "name"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lock",
                "method": "acquire",
                "args": [
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insertIgnore",
                "args": [
                  "vote",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "gold",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "AbsFromUserPool": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AbsFromUserPool.php",
      "properties": {},
      "methods": {
        "occupyGeneralName": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "select_pool",
                  {},
                  "unique_name = %s AND owner IS NOT NULL",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pickGeneralFromPool": {
          "params": [
            "db",
            "rng",
            "owner",
            "pickCnt",
            "prefix"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "select_pool",
                  {},
                  "reserved_until < %s AND general_id IS NULL",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "AbsGeneralPool": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AbsGeneralPool.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "db",
            "rng",
            "info",
            "validUntil"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "builder",
                      "method": "setStat",
                      "args": [
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "builder",
                      "method": "setExpDed",
                      "args": [
                        "offsetlookup",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "builder",
                      "method": "setDex",
                      "args": [
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "builder",
                      "method": "setSpecial",
                      "args": [
                        "bin",
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getUniqueName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "checkDuplicatedCnt": {
          "params": [
            "db",
            "name"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralBuilder": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getValidUntil": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "pickGeneralFromPool": {
          "params": [
            "db",
            "rng",
            "owner",
            "pickCnt",
            "prefix"
          ],
          "statements": []
        },
        "occupyGeneralName": {
          "params": [],
          "statements": []
        },
        "getPoolName": {
          "params": [],
          "statements": []
        },
        "initPool": {
          "params": [
            "db"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "None": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/None.php",
      "properties": {
        "id": "0",
        "name": "-",
        "info": "",
        "selectWeight": "0",
        "type": {}
      },
      "methods": {},
      "constants": {}
    },
    "che_성벽선제": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionCrewType/che_성벽선제.php",
      "properties": {
        "name": "성벽선제",
        "info": "전투 가능한 성벽이라면 선제공격을 합니다."
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_간파_노군입산부": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_간파_노군입산부.php",
      "properties": {
        "rawName": "노군입산부",
        "name": "노군입산부(간파)",
        "info": "[전투] 상대 회피 확률 -25%p, 상대 필살 확률 -10%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_격노_구정신단경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_격노_구정신단경.php",
      "properties": {
        "rawName": "구정신단경",
        "name": "구정신단경(격노)",
        "info": "[전투] 상대방 필살 시 격노(필살) 발동, 회피 시도시 25% 확률로 격노 발동, 공격 시 일정 확률로 진노(1페이즈 추가), 격노마다 대미지 5% 추가 중첩",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_계략_삼략": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_계략_삼략.php",
      "properties": {
        "rawName": "삼략",
        "name": "삼략(계략)",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +20%p<br>[전투] 계략 시도 확률 +10%p, 계략 성공 확률 +10%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_계략_육도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_계략_육도.php",
      "properties": {
        "rawName": "육도",
        "name": "육도(계략)",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +20%p<br>[전투] 계략 시도 확률 +10%p, 계략 성공 확률 +10%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_계략_이추": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_계략_이추.php",
      "properties": {
        "rawName": "이추",
        "name": "이추(계략)",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +20%p",
        "cost": "1000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryConsumeNow": {
          "params": [
            "general",
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "che_계략_향낭": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_계략_향낭.php",
      "properties": {
        "rawName": "향낭",
        "name": "향낭(계략)",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +50%p",
        "cost": "3000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "2000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryConsumeNow": {
          "params": [
            "general",
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "che_공성_묵자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_공성_묵자.php",
      "properties": {
        "rawName": "묵자",
        "name": "묵자(공성)",
        "info": "[전투] 성벽 공격 시 대미지 +50%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_내정_납금박산로": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_내정_납금박산로.php",
      "properties": {
        "rawName": "납금박산로",
        "name": "납금박산로(내정)",
        "info": "[내정] 내정 성공률 +15%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_농성_위공자병법": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_농성_위공자병법.php",
      "properties": {
        "rawName": "위공자병법",
        "name": "위공자병법(농성)",
        "info": "[계략] 장수 주둔 도시 화계·탈취·파괴·선동 : 성공률 -30%p<br>[전투] 상대 계략 시도 확률 -10%p, 상대 계략 성공 확률 -10%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_농성_주서음부": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_농성_주서음부.php",
      "properties": {
        "rawName": "주서음부",
        "name": "주서음부(농성)",
        "info": "[계략] 장수 주둔 도시 화계·탈취·파괴·선동 : 성공률 -30%p<br>[전투] 상대 계략 시도 확률 -10%p, 상대 계략 성공 확률 -10%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_능력치_무력_두강주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_능력치_무력_두강주.php",
      "properties": {
        "rawName": "두강주",
        "name": "두강주(무력)",
        "info": "[능력치] 무력 +5 +(4년마다 +1)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_능력치_지력_이강주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_능력치_지력_이강주.php",
      "properties": {
        "rawName": "이강주",
        "name": "이강주(지력)",
        "info": "[능력치] 지력 +5 +(4년마다 +1)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_능력치_통솔_보령압주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_능력치_통솔_보령압주.php",
      "properties": {
        "rawName": "보령압주",
        "name": "보령압주(통솔)",
        "info": "[능력치] 통솔 +5 +(4년마다 +1)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명마_01_노기": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_01_노기.php",
      "properties": {
        "cost": "1000",
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_02_조랑": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_02_조랑.php",
      "properties": {
        "cost": "3000",
        "buyable": true,
        "reqSecu": "2000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_03_노새": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_03_노새.php",
      "properties": {
        "cost": "6000",
        "buyable": true,
        "reqSecu": "3000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_04_나귀": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_04_나귀.php",
      "properties": {
        "cost": "10000",
        "buyable": true,
        "reqSecu": "4000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_05_갈색마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_05_갈색마.php",
      "properties": {
        "cost": "15000",
        "buyable": true,
        "reqSecu": "5000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_06_흑색마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_06_흑색마.php",
      "properties": {
        "cost": "21000",
        "buyable": true,
        "reqSecu": "6000"
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_07_기주마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_07_기주마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 공격 시 페이즈 +1"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명마_07_백마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_07_백마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 전투 종료로 인한 부상 없음"
              }
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명마_07_백상": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_07_백상.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 공격력 +20%, 소모 군량 +10%, 공격 시 페이즈 -1"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_명마_07_오환마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_07_오환마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_08_양주마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_08_양주마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_08_흉노마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_08_흉노마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_09_과하마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_09_과하마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_09_의남백마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_09_의남백마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_10_대완마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_10_대완마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_10_옥추마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_10_옥추마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_11_서량마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_11_서량마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_11_화종마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_11_화종마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_12_사륜거": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_12_사륜거.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 전투 종료로 인한 부상 없음"
              }
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명마_12_옥란백용구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_12_옥란백용구.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 남은 병력이 적을수록 회피 확률 증가. 최대 +50%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명마_13_적로": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_13_적로.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_13_절영": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_13_절영.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_14_적란마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_14_적란마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_14_조황비전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_14_조황비전.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_15_적토마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_15_적토마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명마_15_한혈마": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명마_15_한혈마.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_명성_구석": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_명성_구석.php",
      "properties": {
        "rawName": "구석",
        "name": "구석(명성)",
        "info": "명성 +20%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_01_단도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_01_단도.php",
      "properties": {
        "cost": "1000",
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_02_단궁": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_02_단궁.php",
      "properties": {
        "cost": "3000",
        "buyable": true,
        "reqSecu": "2000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 새로운 상대와 전투 시 1% 확률로 저격 발동, 성공 시 사기+20"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_03_단극": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_03_단극.php",
      "properties": {
        "cost": "6000",
        "buyable": true,
        "reqSecu": "3000"
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_04_목검": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_04_목검.php",
      "properties": {
        "cost": "10000",
        "buyable": true,
        "reqSecu": "4000"
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_05_죽창": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_05_죽창.php",
      "properties": {
        "cost": "15000",
        "buyable": true,
        "reqSecu": "5000"
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_06_소부": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_06_소부.php",
      "properties": {
        "cost": "21000",
        "buyable": true,
        "reqSecu": "6000"
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_07_동추": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_07_동추.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_07_맥궁": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_07_맥궁.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 새로운 상대와 전투 시 20% 확률로 저격 발동, 성공 시 사기+20"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_07_철쇄": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_07_철쇄.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_07_철편": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_07_철편.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_08_유성추": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_08_유성추.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_08_철질여골": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_08_철질여골.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_09_동호비궁": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_09_동호비궁.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 새로운 상대와 전투 시 20% 확률로 저격 발동, 성공 시 사기+20"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_09_쌍철극": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_09_쌍철극.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_10_대부": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_10_대부.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_10_삼첨도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_10_삼첨도.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_11_고정도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_11_고정도.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_11_이광궁": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_11_이광궁.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 새로운 상대와 전투 시 10% 확률로 저격 발동, 성공 시 사기+10"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_12_철척사모": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_12_철척사모.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_12_칠성검": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_12_칠성검.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_13_사모": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_13_사모.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_13_양유기궁": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_13_양유기궁.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 새로운 상대와 전투 시 10% 확률로 저격 발동, 성공 시 사기+10"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무기_14_방천화극": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_14_방천화극.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_14_언월도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_14_언월도.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_15_의천검": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_15_의천검.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_무기_15_청홍검": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_무기_15_청홍검.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_반계_백우선": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_반계_백우선.php",
      "properties": {
        "rawName": "백우선",
        "name": "백우선(반계)",
        "info": "[전투] 상대의 계략 성공 확률 -10%p, 상대의 계략을 30% 확률로 되돌림, 반목 성공시 대미지 추가(+60% → +100%), 소모 군량 +10%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_반계_파초선": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_반계_파초선.php",
      "properties": {
        "rawName": "파초선",
        "name": "파초선(반계)",
        "info": "[전투] 상대의 계략 성공 확률 -10%p, 상대의 계략을 20% 확률로 되돌림",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_보물_도기": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_보물_도기.php",
      "properties": {
        "rawName": "도기",
        "name": "도기(보물)",
        "info": "[개인] 판매 시 장수 소지금과 국고에 금, 쌀 중 하나를 추가 (총 +10,000, 2년마다 +5,000)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onArbitraryAction": {
          "params": [
            "general",
            "rng",
            "actionType",
            "phase",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        {},
                        "nation=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_부적_태현청생부": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_부적_태현청생부.php",
      "properties": {
        "rawName": "태현청생부",
        "name": "태현청생부(부적)",
        "info": "[전투] 저격 불가, 부상 없음",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_불굴_상편": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_불굴_상편.php",
      "properties": {
        "rawName": "상편",
        "name": "상편(불굴)",
        "info": "[전투] 남은 병력이 적을수록 공격력 증가. 최대 +60%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_두강주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_두강주.php",
      "properties": {
        "rawName": "두강주",
        "name": "두강주(사기)",
        "info": "[전투] 사기 보정 +10",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_보령압주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_보령압주.php",
      "properties": {
        "rawName": "보령압주",
        "name": "보령압주(사기)",
        "info": "[전투] 사기 보정 +10",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_의적주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_의적주.php",
      "properties": {
        "rawName": "의적주",
        "name": "의적주(사기)",
        "info": "[전투] 사기 보정 +10",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_초선화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_초선화.php",
      "properties": {
        "rawName": "초선화",
        "name": "초선화(사기)",
        "info": "[전투] 사기 보정 +15",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_춘화첩": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_춘화첩.php",
      "properties": {
        "rawName": "춘화첩",
        "name": "춘화첩(사기)",
        "info": "[전투] 사기 보정 +15",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_사기_탁주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_사기_탁주.php",
      "properties": {
        "rawName": "탁주",
        "name": "탁주(사기)",
        "info": "[전투] 사기 +30(한도 내). 1회용",
        "cost": "1000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_상성보정_과실주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_상성보정_과실주.php",
      "properties": {
        "rawName": "과실주",
        "name": "과실주(상성)",
        "info": "[전투] 대등/유리한 병종 전투시 공격력 +10%, 피해 -10%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_01_효경전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_01_효경전.php",
      "properties": {
        "cost": "1000",
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +1%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_02_회남자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_02_회남자.php",
      "properties": {
        "cost": "3000",
        "buyable": true,
        "reqSecu": "2000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +1%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_03_변도론": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_03_변도론.php",
      "properties": {
        "cost": "6000",
        "buyable": true,
        "reqSecu": "3000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +2%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_04_건상역주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_04_건상역주.php",
      "properties": {
        "cost": "10000",
        "buyable": true,
        "reqSecu": "4000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +2%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_05_여씨춘추": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_05_여씨춘추.php",
      "properties": {
        "cost": "15000",
        "buyable": true,
        "reqSecu": "5000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +3%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_06_사민월령": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_06_사민월령.php",
      "properties": {
        "cost": "21000",
        "buyable": true,
        "reqSecu": "6000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +3%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_07_논어": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_07_논어.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 상대의 계략 성공 확률 -10%p"
              }
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_07_사마법": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_07_사마법.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 상대의 계략을 10% 확률로 되돌림"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_07_위료자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_07_위료자.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 시도 확률 +20%p"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_07_한서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_07_한서.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_08_사기": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_08_사기.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_08_전론": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_08_전론.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 계략 성공 시 대미지 +20%"
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_09_역경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_09_역경.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_09_장자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_09_장자.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_10_구국론": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_10_구국론.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_10_시경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_10_시경.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_11_상군서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_11_상군서.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_11_춘추전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_11_춘추전.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 상대의 계략 성공 확률 -10%p"
              }
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_12_맹덕신서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_12_맹덕신서.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_12_산해경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_12_산해경.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "<br>[전투] 상대의 계략을 10% 확률로 되돌림"
              }
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_서적_13_관자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_13_관자.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_13_병법24편": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_13_병법24편.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_14_오자병법": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_14_오자병법.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_14_한비자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_14_한비자.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_15_노자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_15_노자.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_서적_15_손자병법": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_서적_15_손자병법.php",
      "properties": {
        "cost": "200",
        "buyable": false
      },
      "methods": {},
      "constants": {}
    },
    "che_숙련_동작": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_숙련_동작.php",
      "properties": {
        "rawName": "동작",
        "name": "동작(숙련)",
        "info": "숙련 +20%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_약탈_옥벽": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_약탈_옥벽.php",
      "properties": {
        "rawName": "옥벽",
        "name": "옥벽(약탈)",
        "info": "[전투] 새로운 상대와 전투 시 20% 확률로 상대 금, 쌀 10% 약탈",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_위압_조목삭": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_위압_조목삭.php",
      "properties": {
        "rawName": "조목삭",
        "name": "조목삭(위압)",
        "info": "[전투] 첫 페이즈 위압 발동(적 공격, 회피 불가, 사기 5 감소)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의술_상한잡병론": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_의술_상한잡병론.php",
      "properties": {
        "rawName": "상한잡병론",
        "name": "상한잡병론(의술)",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의술_정력견혈산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_의술_정력견혈산.php",
      "properties": {
        "rawName": "정력견혈산",
        "name": "정력견혈산(의술)",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의술_청낭서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_의술_청낭서.php",
      "properties": {
        "rawName": "청낭서",
        "name": "청낭서(의술)",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의술_태평청령": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_의술_태평청령.php",
      "properties": {
        "rawName": "태평청령",
        "name": "태평청령(의술)",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_저격_매화수전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_저격_매화수전.php",
      "properties": {
        "rawName": "매화수전",
        "name": "매화수전(저격)",
        "info": "[전투] 새로운 상대와 전투 시 50% 확률로 저격 발동, 성공 시 사기+20",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_저격_비도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_저격_비도.php",
      "properties": {
        "rawName": "비도",
        "name": "비도(저격)",
        "info": "[전투] 새로운 상대와 전투 시 50% 확률로 저격 발동, 성공 시 사기+20",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_저격_수극": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_저격_수극.php",
      "properties": {
        "rawName": "수극",
        "name": "수극(저격)",
        "info": "[전투] 전투 개시 시 저격. 1회용",
        "cost": "1000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "tryConsumeNow": {
          "params": [
            "general",
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "che_저지_삼황내문": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_저지_삼황내문.php",
      "properties": {
        "rawName": "삼황내문",
        "name": "삼황내문(저지)",
        "info": "[전투] 수비 시 첫 페이즈 저지, 50% 확률로 2 페이즈 저지",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_전략_평만지장도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_전략_평만지장도.php",
      "properties": {
        "rawName": "평만지장도",
        "name": "평만지장도(전략)",
        "info": "[전략] 국가전략 사용시 재사용 대기 기간 -20%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStrategic": {
          "params": [
            "turnType",
            "varType",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_조달_주판": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_조달_주판.php",
      "properties": {
        "rawName": "주판",
        "name": "주판(조달)",
        "info": "[내정] 물자조달 성공 확률 +20%p, 물자조달 획득량 +100%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_진압_박혁론": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_진압_박혁론.php",
      "properties": {
        "rawName": "박혁론",
        "name": "박혁론(진압)",
        "info": "[전투] 상대의 계략 되돌림, 격노 불가",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_집중_전국책": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_집중_전국책.php",
      "properties": {
        "rawName": "전국책",
        "name": "전국책(집중)",
        "info": "[전투] 계략 성공 시 대미지 +30%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_징병_낙주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_징병_낙주.php",
      "properties": {
        "rawName": "낙주",
        "name": "낙주(징병)",
        "info": "[군사] 징·모병비 -30%<br>[기타] 통솔 순수 능력치 보정 +15%, 징병/모병/소집해제 시 인구 변동 없음",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_척사_오악진형도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_척사_오악진형도.php",
      "properties": {
        "rawName": "오악진형도",
        "name": "오악진형도(척사)",
        "info": "[전투] 지역·도시 병종 상대로 대미지 +15%, 아군 피해 -15%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_치료_도소연명": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_도소연명.php",
      "properties": {
        "rawName": "도소연명",
        "name": "도소연명(치료)",
        "info": "[군사] 턴 실행 전 부상 회복.",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_치료_무후행군": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_무후행군.php",
      "properties": {
        "rawName": "무후행군",
        "name": "무후행군(치료)",
        "info": "[군사] 턴 실행 전 부상 회복.",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_치료_오석산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_오석산.php",
      "properties": {
        "rawName": "오석산",
        "name": "오석산(치료)",
        "info": "[군사] 턴 실행 전 부상 회복.",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "isValidTurnItem": {
          "params": [
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "che_치료_정력견혈": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_정력견혈.php",
      "properties": {
        "rawName": "정력견혈",
        "name": "정력견혈(치료)",
        "info": "[군사] 턴 실행 전 부상 회복.",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_치료_칠엽청점": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_칠엽청점.php",
      "properties": {
        "rawName": "칠엽청점",
        "name": "칠엽청점(치료)",
        "info": "[군사] 턴 실행 전 부상 회복.",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_치료_환약": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치료_환약.php",
      "properties": {
        "rawName": "환약",
        "name": "환약(치료)",
        "info": "[군사] 턴 실행 전 부상 회복. 3회용",
        "cost": "200",
        "consumable": true,
        "buyable": true,
        "reqSecu": "0"
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "onArbitraryAction": {
          "params": [
            "general",
            "rng",
            "actionType",
            "phase",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "staticlookup",
                  "3"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryConsumeNow": {
          "params": [
            "general",
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "staticlookup",
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "staticlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {
        "REMAIN_KEY": "remain환약"
      }
    },
    "che_치트_HideD의_사인검": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_치트_HideD의_사인검.php",
      "properties": {
        "rawName": "HideD의 사인검",
        "name": "HideD의 사인검(치트)",
        "cost": "9000000",
        "consumable": false,
        "buyable": false
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_필살_둔갑천서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_필살_둔갑천서.php",
      "properties": {
        "rawName": "둔갑천서",
        "name": "둔갑천서(필살)",
        "info": "[전투] 필살 확률 +20%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_행동_서촉지형도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_행동_서촉지형도.php",
      "properties": {
        "rawName": "서촉지형도",
        "name": "서촉지형도(행동)",
        "info": "[전투] 공격 시 페이즈 + 2",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_환술_논어집해": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_환술_논어집해.php",
      "properties": {
        "rawName": "논어집해",
        "name": "논어집해(환술)",
        "info": "[전투] 계략 성공 확률 +10%p, 계략 성공 시 대미지 +20%",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_회피_둔갑천서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_회피_둔갑천서.php",
      "properties": {
        "rawName": "둔갑천서",
        "name": "둔갑천서(회피)",
        "info": "[전투] 회피 확률 +20%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_회피_태평요술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_회피_태평요술.php",
      "properties": {
        "rawName": "태평요술",
        "name": "태평요술(회피)",
        "info": "[전투] 회피 확률 +20%p",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_훈련_과실주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_훈련_과실주.php",
      "properties": {
        "rawName": "과실주",
        "name": "과실주(훈련)",
        "info": "[전투] 훈련 보정 +10",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_훈련_단결도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_훈련_단결도.php",
      "properties": {
        "rawName": "단결도",
        "name": "단결도(훈련)",
        "info": "[전투] 훈련 보정 +15",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_훈련_이강주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_훈련_이강주.php",
      "properties": {
        "rawName": "이강주",
        "name": "이강주(훈련)",
        "info": "[전투] 훈련 보정 +10",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_훈련_철벽서": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_훈련_철벽서.php",
      "properties": {
        "rawName": "철벽서",
        "name": "철벽서(훈련)",
        "info": "[전투] 훈련 보정 +15",
        "cost": "200",
        "consumable": false
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_훈련_청주": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/che_훈련_청주.php",
      "properties": {
        "rawName": "청주",
        "name": "청주(훈련)",
        "info": "[전투] 훈련 +40(한도 내). 1회용",
        "cost": "1000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "1000"
      },
      "methods": {
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_빼빼로": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_빼빼로.php",
      "properties": {
        "rawName": "빼빼로",
        "name": "빼빼로",
        "info": "1의 상징입니다.<br>통솔 +1, 무력 +1, 지력 +1",
        "cost": "1500",
        "buyable": true,
        "consumable": false,
        "reqSecu": "12000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_격노": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_격노.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(격노)",
        "info": "[전투] 상대방 필살 시 격노(필살) 발동, 회피 시도시 25% 확률로 격노 발동, 공격 시 일정 확률로 진노(1페이즈 추가), 격노마다 대미지 20% 추가 중첩",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_견고": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_견고.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(견고)",
        "info": "[전투] 상대 필살 확률 -20%p, 상대 계략 시도시 성공 확률 -10%p, 부상 없음, 아군 피해 -10%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "event_전투특기_공성": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_공성.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(공성)",
        "info": "[군사] 차병 계통 징·모병비 -10%<br>[전투] 성벽 공격 시 대미지 +100%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 차병 숙련을 가산",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_궁병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_궁병.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(궁병)",
        "info": "[군사] 궁병 계통 징·모병비 -10%<br>[전투] 회피 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 궁병 숙련을 가산",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_귀병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_귀병.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(귀병)",
        "info": "[군사] 귀병 계통 징·모병비 -10%<br>[전투] 계략 성공 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 귀병 숙련을 가산",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_기병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_기병.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(기병)",
        "info": "[군사] 기병 계통 징·모병비 -10%<br>[전투] 수비 시 대미지 +10%, 공격 시 대미지 +20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 기병 숙련을 가산",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_돌격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_돌격.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(돌격)",
        "info": "[전투] 공격 시 대등/유리한 병종에게는 퇴각 전까지 전투, 공격 시 페이즈 + 2, 공격 시 대미지 +5%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_무쌍": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_무쌍.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(무쌍)",
        "info": "[전투] 대미지 +5%, 피해 -2%, 공격 시 필살 확률 +10%p, <br>승리 수의 로그 비례로 대미지 상승(10회 ⇒ +5%, 40회 ⇒ +15%)<br>승리 수의 로그 비례로 피해 감소(10회 ⇒ -2%, 40회 ⇒ -6%)",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1.05"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.98"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "event_전투특기_반계": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_반계.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(반계)",
        "info": "[전투] 상대의 계략 성공 확률 -10%p, 상대의 계략을 40% 확률로 되돌림, 반목 성공시 대미지 추가(+60% → +150%)",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_보병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_보병.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(보병)",
        "info": "[군사] 보병 계통 징·모병비 -10%<br>[전투] 공격 시 아군 피해 -10%, 수비 시 아군 피해 -20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 보병 숙련을 가산",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_신산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_신산.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(신산)",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +10%p<br>[전투] 계략 시도 확률 +20%p, 계략 성공 확률 +20%p",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_신중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_신중.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(신중)",
        "info": "[전투] 계략 성공 확률 100%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_위압": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_위압.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(위압)",
        "info": "[전투] 첫 페이즈 위압 발동(적 공격, 회피 불가, 사기 5 감소)",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_의술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_의술.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(의술)",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_저격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_저격.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(저격)",
        "info": "[전투] 새로운 상대와 전투 시 50% 확률로 저격 발동, 성공 시 사기+20",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_집중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_집중.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(집중)",
        "info": "[전투] 계략 성공 시 대미지 +50%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_징병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_징병.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(징병)",
        "info": "[군사] 징병/모병 시 훈사 70/84 제공<br>[기타] 통솔 순수 능력치 보정 +25%, 징병/모병/소집해제 시 인구 변동 없음",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": [
                              {
                                "kind": "return"
                              }
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_척사": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_척사.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(척사)",
        "info": "[전투] 지역·도시 병종 상대로 대미지 +20%, 아군 피해 -20%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "event_전투특기_필살": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_필살.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(필살)",
        "info": "[전투] 필살 확률 +30%p, 필살 발동시 대상 회피 불가, 필살 계수 향상",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_전투특기_환술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_전투특기_환술.php",
      "properties": {
        "rawName": "비급",
        "name": "비급(환술)",
        "info": "[전투] 계략 성공 확률 +10%p, 계략 성공 시 대미지 +30%",
        "cost": "100",
        "buyable": true,
        "consumable": false,
        "reqSecu": "3000"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_충차": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionItem/event_충차.php",
      "properties": {
        "rawName": "충차",
        "name": "충차",
        "info": "[전투] 성벽 공격 시 대미지 +50%, 2회용",
        "cost": "2000",
        "consumable": true,
        "buyable": true,
        "reqSecu": "3000"
      },
      "methods": {
        "onArbitraryAction": {
          "params": [
            "general",
            "rng",
            "actionType",
            "phase",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "staticlookup",
                  "2"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "REMAIN_KEY": "remain충차"
      }
    },
    "ActionLogger": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionLogger.php",
      "properties": {
        "generalHistoryLog": {},
        "generalActionLog": {},
        "generalBattleResultLog": {},
        "generalBattleDetailLog": {},
        "nationalHistoryLog": {},
        "globalHistoryLog": {},
        "globalActionLog": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "generalID",
            "nationID",
            "year",
            "month",
            "autoFlush"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "__destruct": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "rollback": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "flush": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushGeneralHistoryLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushGeneralActionLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushBattleResultLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushBattleDetailLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushNationHistoryLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushGlobalActionLog",
                      "args": [
                        "propertylookup",
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "pushGeneralHistoryLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushGeneralActionLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushGeneralBattleResultLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushGeneralBattleDetailLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushNationalHistoryLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushGlobalActionLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "pushGlobalHistoryLog": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "formatText": {
          "params": [
            "text",
            "formatType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pushBattleResultTemplate": {
          "params": [
            "me",
            "oppose"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "defense"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "←"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "pushGeneralBattleResultLog",
                "args": [
                  "variable",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "variable",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "pushGeneralActionLog",
                "args": [
                  "variable",
                  "staticlookup"
                ]
              }
            }
          ]
        },
        "getYear": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getMonth": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "RAWTEXT": "0",
        "PLAIN": "1",
        "YEAR_MONTH": "2",
        "YEAR": "3",
        "MONTH": "4",
        "EVENT_PLAIN": "5",
        "EVENT_YEAR_MONTH": "6",
        "NOTICE": "7",
        "NOTICE_YEAR_MONTH": "8"
      }
    },
    "che_덕가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_덕가.php",
      "properties": {
        "name": "덕가",
        "info": "",
        "pros": "치안↑ 인구↑ 민심↑",
        "cons": "쌀수입↓ 수성↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_도가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_도가.php",
      "properties": {
        "name": "도가",
        "info": "",
        "pros": "인구↑",
        "cons": "기술↓ 치안↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_도적": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_도적.php",
      "properties": {
        "name": "도적",
        "info": "",
        "pros": "계략↑",
        "cons": "금수입↓ 치안↓ 민심↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_명가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_명가.php",
      "properties": {
        "name": "명가",
        "info": "",
        "pros": "기술↑ 인구↑",
        "cons": "쌀수입↓ 수성↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_묵가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_묵가.php",
      "properties": {
        "name": "묵가",
        "info": "",
        "pros": "수성↑",
        "cons": "기술↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_법가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_법가.php",
      "properties": {
        "name": "법가",
        "info": "",
        "pros": "금수입↑ 치안↑",
        "cons": "인구↓ 민심↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_병가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_병가.php",
      "properties": {
        "name": "병가",
        "info": "",
        "pros": "기술↑ 수성↑",
        "cons": "인구↓ 민심↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_불가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_불가.php",
      "properties": {
        "name": "불가",
        "info": "",
        "pros": "민심↑ 수성↑",
        "cons": "금수입↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_오두미도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_오두미도.php",
      "properties": {
        "name": "오두미도",
        "info": "",
        "pros": "쌀수입↑ 인구↑",
        "cons": "기술↓ 수성↓ 농상↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_유가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_유가.php",
      "properties": {
        "name": "유가",
        "info": "",
        "pros": "농상↑ 민심↑",
        "cons": "쌀수입↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_음양가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_음양가.php",
      "properties": {
        "name": "음양가",
        "info": "",
        "pros": "농상↑ 인구↑",
        "cons": "기술↓ 전략↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStrategic": {
          "params": [
            "turnType",
            "varType",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_종횡가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_종횡가.php",
      "properties": {
        "name": "종횡가",
        "info": "",
        "pros": "전략↑ 수성↑",
        "cons": "금수입↓ 농상↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStrategic": {
          "params": [
            "turnType",
            "varType",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_중립": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_중립.php",
      "properties": {
        "name": "-",
        "info": "",
        "pros": "",
        "cons": ""
      },
      "methods": {},
      "constants": {}
    },
    "che_태평도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionNationType/che_태평도.php",
      "properties": {
        "name": "태평도",
        "info": "",
        "pros": "인구↑ 민심↑",
        "cons": "기술↓ 수성↓"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_대의": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_대의.php",
      "properties": {
        "id": "1",
        "name": "대의",
        "info": "명성 +10%, 훈련 -5"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_안전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_안전.php",
      "properties": {
        "id": "9",
        "name": "안전",
        "info": "사기 -5, 징·모병 비용 -20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_왕좌": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_왕좌.php",
      "properties": {
        "id": "0",
        "name": "왕좌",
        "info": "명성 +10%, 사기 -5"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_유지": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_유지.php",
      "properties": {
        "id": "8",
        "name": "유지",
        "info": "훈련 -5, 징·모병 비용 -20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_은둔": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_은둔.php",
      "properties": {
        "id": "10",
        "name": "은둔",
        "info": "명성 -10%, 계급 -10%, 사기 -5, 훈련 -5, 단련 성공률 +10%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의협": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_의협.php",
      "properties": {
        "id": "2",
        "name": "의협",
        "info": "사기 +5, 징·모병 비용 +20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_재간": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_재간.php",
      "properties": {
        "id": "7",
        "name": "재간",
        "info": "명성 -10%, 징·모병 비용 -20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_정복": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_정복.php",
      "properties": {
        "id": "4",
        "name": "정복",
        "info": "명성 -10%, 사기 +5"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_출세": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_출세.php",
      "properties": {
        "id": "6",
        "name": "출세",
        "info": "명성 +10%, 징·모병 비용 +20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_패권": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_패권.php",
      "properties": {
        "id": "3",
        "name": "패권",
        "info": "훈련 +5, 징·모병 비용 +20%"
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_할거": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionPersonality/che_할거.php",
      "properties": {
        "id": "5",
        "name": "할거",
        "info": "명성 -10%, 훈련 +5"
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_MoreEffect": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionScenarioEffect/event_MoreEffect.php",
      "properties": {},
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "상업": "2",
                  "농업": "2",
                  "치안": "2",
                  "기술": "2",
                  "성벽": "2",
                  "수비": "2",
                  "인구": "2",
                  "민심": "2"
                }
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_StrongAttacker": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionScenarioEffect/event_StrongAttacker.php",
      "properties": {},
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "event_UnlimitedDefenceThresholdChange": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionScenarioEffect/event_UnlimitedDefenceThresholdChange.php",
      "properties": {},
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_격노": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_격노.php",
      "properties": {
        "id": "74",
        "name": "격노",
        "info": "[전투] 상대방 필살 시 격노(필살) 발동, 회피 시도시 25% 확률로 격노 발동, 공격 시 일정 확률로 진노(1페이즈 추가), 격노마다 대미지 20% 추가 중첩",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_견고": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_견고.php",
      "properties": {
        "id": "62",
        "name": "견고",
        "info": "[전투] 상대 필살 확률 -20%p, 상대 계략 시도시 성공 확률 -10%p, 부상 없음, 아군 피해 -10%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_event_공성": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_공성.php",
      "properties": {
        "id": "53",
        "name": "공성",
        "info": "[군사] 차병 계통 징·모병비 -10%<br>[전투] 성벽 공격 시 대미지 +100%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 차병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_궁병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_궁병.php",
      "properties": {
        "id": "51",
        "name": "궁병",
        "info": "[군사] 궁병 계통 징·모병비 -10%<br>[전투] 회피 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 궁병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_귀병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_귀병.php",
      "properties": {
        "id": "40",
        "name": "귀병",
        "info": "[군사] 귀병 계통 징·모병비 -10%<br>[전투] 계략 성공 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 귀병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_기병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_기병.php",
      "properties": {
        "id": "52",
        "name": "기병",
        "info": "[군사] 기병 계통 징·모병비 -10%<br>[전투] 수비 시 대미지 +10%, 공격 시 대미지 +20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 기병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_돌격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_돌격.php",
      "properties": {
        "id": "60",
        "name": "돌격",
        "info": "[전투] 공격 시 대등/유리한 병종에게는 퇴각 전까지 전투, 공격 시 페이즈 + 2, 공격 시 대미지 +5%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_무쌍": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_무쌍.php",
      "properties": {
        "id": "61",
        "name": "무쌍",
        "info": "[전투] 대미지 +5%, 피해 -2%, 공격 시 필살 확률 +10%p, <br>승리 수의 로그 비례로 대미지 상승(10회 ⇒ +5%, 40회 ⇒ +15%)<br>승리 수의 로그 비례로 피해 감소(10회 ⇒ -2%, 40회 ⇒ -6%)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1.05"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.98"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_event_반계": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_반계.php",
      "properties": {
        "id": "45",
        "name": "반계",
        "info": "[전투] 상대의 계략 성공 확률 -10%p, 상대의 계략을 40% 확률로 되돌림, 반목 성공시 대미지 추가(+60% → +150%)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_보병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_보병.php",
      "properties": {
        "id": "50",
        "name": "보병",
        "info": "[군사] 보병 계통 징·모병비 -10%<br>[전투] 공격 시 아군 피해 -10%, 수비 시 아군 피해 -20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 보병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_신산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_신산.php",
      "properties": {
        "id": "41",
        "name": "신산",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +10%p<br>[전투] 계략 시도 확률 +20%p, 계략 성공 확률 +20%p",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_신중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_신중.php",
      "properties": {
        "id": "44",
        "name": "신중",
        "info": "[전투] 계략 성공 확률 100%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_위압": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_위압.php",
      "properties": {
        "id": "63",
        "name": "위압",
        "info": "[전투] 첫 페이즈 위압 발동(적 공격, 회피 불가, 사기 5 감소)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_의술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_의술.php",
      "properties": {
        "id": "73",
        "name": "의술",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "selectWeight": "2",
        "type": {}
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_저격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_저격.php",
      "properties": {
        "id": "70",
        "name": "저격",
        "info": "[전투] 새로운 상대와 전투 시 50% 확률로 저격 발동, 성공 시 사기+20",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_집중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_집중.php",
      "properties": {
        "id": "43",
        "name": "집중",
        "info": "[전투] 계략 성공 시 대미지 +50%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_징병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_징병.php",
      "properties": {
        "id": "72",
        "name": "징병",
        "info": "[군사] 징병/모병 시 훈사 70/84 제공<br>[기타] 통솔 순수 능력치 보정 +25%, 징병/모병/소집해제 시 인구 변동 없음",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": [
                              {
                                "kind": "return"
                              }
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_척사": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_척사.php",
      "properties": {
        "id": "75",
        "name": "척사",
        "info": "[전투] 지역·도시 병종 상대로 대미지 +20%, 아군 피해 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_event_필살": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_필살.php",
      "properties": {
        "id": "71",
        "name": "필살",
        "info": "[전투] 필살 확률 +30%p, 필살 발동시 대상 회피 불가, 필살 계수 향상",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_event_환술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_event_환술.php",
      "properties": {
        "id": "42",
        "name": "환술",
        "info": "[전투] 계략 성공 확률 +10%p, 계략 성공 시 대미지 +30%",
        "selectWeight": "5",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_거상": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_거상.php",
      "properties": {
        "id": "999",
        "name": "거상",
        "info": "<비활성화>",
        "selectWeight": "0",
        "type": {}
      },
      "methods": {},
      "constants": {}
    },
    "che_경작": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_경작.php",
      "properties": {
        "id": "1",
        "name": "경작",
        "info": "[내정] 농지 개간 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_귀모": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_귀모.php",
      "properties": {
        "id": "31",
        "name": "귀모",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +20%p",
        "selectWeight": "2.5",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_발명": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_발명.php",
      "properties": {
        "id": "3",
        "name": "발명",
        "info": "[내정] 기술 연구 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_상재": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_상재.php",
      "properties": {
        "id": "2",
        "name": "상재",
        "info": "[내정] 상업 투자 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_수비": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_수비.php",
      "properties": {
        "id": "11",
        "name": "수비",
        "info": "[내정] 수비 강화 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_인덕": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_인덕.php",
      "properties": {
        "id": "20",
        "name": "인덕",
        "info": "[내정] 주민 선정·정착 장려 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_축성": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_축성.php",
      "properties": {
        "id": "10",
        "name": "축성",
        "info": "[내정] 성벽 보수 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_통찰": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialDomestic/che_통찰.php",
      "properties": {
        "id": "12",
        "name": "통찰",
        "info": "[내정] 치안 강화 : 기본 보정 +10%, 성공률 +10%p, 비용 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_격노": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_격노.php",
      "properties": {
        "id": "74",
        "name": "격노",
        "info": "[전투] 상대방 필살 시 격노(필살) 발동, 회피 시도시 25% 확률로 격노 발동, 공격 시 일정 확률로 진노(1페이즈 추가), 격노마다 대미지 20% 추가 중첩",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_견고": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_견고.php",
      "properties": {
        "id": "62",
        "name": "견고",
        "info": "[전투] 상대 필살 확률 -20%p, 상대 계략 시도시 성공 확률 -10%p, 부상 없음, 아군 피해 -10%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_공성": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_공성.php",
      "properties": {
        "id": "53",
        "name": "공성",
        "info": "[군사] 차병 계통 징·모병비 -10%<br>[전투] 성벽 공격 시 대미지 +100%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 차병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_궁병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_궁병.php",
      "properties": {
        "id": "51",
        "name": "궁병",
        "info": "[군사] 궁병 계통 징·모병비 -10%<br>[전투] 회피 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 궁병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_귀병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_귀병.php",
      "properties": {
        "id": "40",
        "name": "귀병",
        "info": "[군사] 귀병 계통 징·모병비 -10%<br>[전투] 계략 성공 확률 +20%p,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 귀병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_기병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_기병.php",
      "properties": {
        "id": "52",
        "name": "기병",
        "info": "[군사] 기병 계통 징·모병비 -10%<br>[전투] 수비 시 대미지 +10%, 공격 시 대미지 +20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 기병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_돌격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_돌격.php",
      "properties": {
        "id": "60",
        "name": "돌격",
        "info": "[전투] 공격 시 대등/유리한 병종에게는 퇴각 전까지 전투, 공격 시 페이즈 + 2, 공격 시 대미지 +5%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무쌍": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_무쌍.php",
      "properties": {
        "id": "61",
        "name": "무쌍",
        "info": "[전투] 대미지 +5%, 피해 -2%, 공격 시 필살 확률 +10%p, <br>승리 수의 로그 비례로 대미지 상승(10회 ⇒ +5%, 40회 ⇒ +15%)<br>승리 수의 로그 비례로 피해 감소(10회 ⇒ -2%, 40회 ⇒ -6%)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1.05"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.98"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_반계": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_반계.php",
      "properties": {
        "id": "45",
        "name": "반계",
        "info": "[전투] 상대의 계략 성공 확률 -10%p, 상대의 계략을 40% 확률로 되돌림, 반목 성공시 대미지 추가(+60% → +150%)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_보병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_보병.php",
      "properties": {
        "id": "50",
        "name": "보병",
        "info": "[군사] 보병 계통 징·모병비 -10%<br>[전투] 공격 시 아군 피해 -10%, 수비 시 아군 피해 -20%,<br>공격시 상대 병종에/수비시 자신 병종 숙련에 보병 숙련을 가산",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_신산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_신산.php",
      "properties": {
        "id": "41",
        "name": "신산",
        "info": "[계략] 화계·탈취·파괴·선동 : 성공률 +10%p<br>[전투] 계략 시도 확률 +20%p, 계략 성공 확률 +20%p",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_신중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_신중.php",
      "properties": {
        "id": "44",
        "name": "신중",
        "info": "[전투] 계략 성공 확률 100%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_위압": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_위압.php",
      "properties": {
        "id": "63",
        "name": "위압",
        "info": "[전투] 첫 페이즈 위압 발동(적 공격, 회피 불가, 사기 5 감소)",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_의술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_의술.php",
      "properties": {
        "id": "73",
        "name": "의술",
        "info": "[군사] 매 턴마다 자신(100%)과 소속 도시 장수(적 포함 50%) 부상 회복<br>[전투] 페이즈마다 40% 확률로 치료 발동(아군 피해 30% 감소, 부상 회복)",
        "selectWeight": "2",
        "type": {}
      },
      "methods": {
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_저격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_저격.php",
      "properties": {
        "id": "70",
        "name": "저격",
        "info": "[전투] 새로운 상대와 전투 시 50% 확률로 저격 발동, 성공 시 사기+20",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_집중": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_집중.php",
      "properties": {
        "id": "43",
        "name": "집중",
        "info": "[전투] 계략 성공 시 대미지 +50%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_징병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_징병.php",
      "properties": {
        "actionName": "징병",
        "costOffset": "1",
        "reqArg": true,
        "maxCrew": "0",
        "reqCrew": "0",
        "isInitStatic": false
      },
      "methods": {
        "initStatic": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "crew",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "train",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "atmos",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "crewtype",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "crew",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "train",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "atmos",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "variable",
                  "bin",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "armType",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_척사": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_척사.php",
      "properties": {
        "id": "75",
        "name": "척사",
        "info": "[전투] 지역·도시 병종 상대로 대미지 +20%, 아군 피해 -20%",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "che_필살": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_필살.php",
      "properties": {
        "id": "71",
        "name": "필살",
        "info": "[전투] 필살 확률 +30%p, 필살 발동시 대상 회피 불가, 필살 계수 향상",
        "selectWeight": "1",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_환술": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ActionSpecialWar/che_환술.php",
      "properties": {
        "id": "42",
        "name": "환술",
        "info": "[전투] 계략 성공 확률 +10%p, 계략 성공 시 대미지 +30%",
        "selectWeight": "5",
        "type": {}
      },
      "methods": {
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "Auction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Auction.php",
      "properties": {
        "_highestBid": false
      },
      "methods": {
        "genObfuscatedName": {
          "params": [
            "id"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "gameStor",
                      "method": "setValue",
                      "args": [
                        "obfuscatedNamePool",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "openAuction": {
          "params": [
            "info",
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "ng_auction",
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getHighestBid": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getMyPrevBid": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "__construct": {
          "params": [
            "auctionID",
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "shrinkCloseDate": {
          "params": [
            "date"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "ng_auction",
                  "call",
                  "id = %i",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "extendLatestBidCloseDate": {
          "params": [
            "date"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "extendCloseDate": {
          "params": [
            "date",
            "force"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "ng_auction",
                  "call",
                  "id = %i",
                  "propertylookup"
                ]
              }
            }
          ]
        },
        "refundBid": {
          "params": [
            "bidItem",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oldBidder",
                      "method": "increaseInheritancePoint",
                      "args": [
                        "staticlookup",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oldBidder",
                      "method": "increaseRankVar",
                      "args": [
                        "staticlookup",
                        "unary"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oldBidder",
                      "method": "increaseVar",
                      "args": [
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oldBidder",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": [
                  true
                ]
              }
            }
          ]
        },
        "closeAuction": {
          "params": [
            "isRollback"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "refundBid",
                            "args": [
                              "variable",
                              "encapsed"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "rollbackAuction",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "ng_auction",
                  "call",
                  "id = %i",
                  "propertylookup"
                ]
              }
            }
          ]
        },
        "bidInheritPoint": {
          "params": [
            "amount",
            "now",
            "tryExtendCloseDate"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "ng_auction_bid",
                  "call"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "extendCloseDate",
                            "args": [
                              "call",
                              true
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "applyDB",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "refundBid",
                      "args": [
                        "variable",
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "_bid": {
          "params": [
            "amount",
            "tryExtendCloseDate"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "ng_auction_bid",
                  "call"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "propertylookup",
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "extendCloseDate",
                      "args": [
                        "variable",
                        true
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "applyDB",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "refundBid",
                      "args": [
                        "variable",
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryFinish": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "closeAuction",
                      "args": [
                        true
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "extendLatestBidCloseDate",
                            "args": [
                              "nullkeyword"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "applyDB",
                            "args": []
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "closeAuction",
                      "args": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": [
                  true
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "bid": {
          "params": [
            "amount",
            "tryExtendCloseDate"
          ],
          "statements": []
        },
        "rollbackAuction": {
          "params": [],
          "statements": []
        },
        "finishAuction": {
          "params": [
            "highestBid",
            "bidder"
          ],
          "statements": []
        }
      },
      "constants": {
        "COEFF_AUCTION_CLOSE_MINUTES": "24",
        "COEFF_EXTENSION_MINUTES_LIMIT_BY_BID": "0.5",
        "COEFF_EXTENSION_MINUTES_BY_EXTENSION_QUERY": "1",
        "MIN_AUCTION_CLOSE_MINUTES": "30",
        "MIN_EXTENSION_MINUTES_PER_BID": "1",
        "MIN_EXTENSION_MINUTES_LIMIT_BY_BID": "5",
        "MIN_EXTENSION_MINUTES_BY_EXTENSION_QUERY": "5"
      }
    },
    "AuctionBasicResource": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AuctionBasicResource.php",
      "properties": {},
      "methods": {
        "openResourceAuction": {
          "params": [
            "general",
            "amount",
            "closeTurnCnt",
            "startBidAmount",
            "finishBidAmount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "propertylookup",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "genDummy": {
          "params": [
            "initFullLogger"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "dummyGeneral",
                "method": "setVar",
                "args": [
                  "name",
                  "상인"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "dummyGeneral",
                "method": "setVar",
                "args": [
                  "gold",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "dummyGeneral",
                "method": "setVar",
                "args": [
                  "rice",
                  "bin"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "dummyGeneral",
                      "method": "initLogger",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "rollbackAuction": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "auctionHost",
                "method": "increaseVar",
                "args": [
                  "propertylookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "auctionHost",
                "method": "applyDB",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "pushAuctionLog",
                      "args": [
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": [
                  true
                ]
              }
            }
          ]
        },
        "finishAuction": {
          "params": [
            "highestBid",
            "bidder"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "auctionHost",
                "method": "increaseVar",
                "args": [
                  "propertylookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bidder",
                "method": "increaseVar",
                "args": [
                  "propertylookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": " <M>★ 마감가 거래 ★</>"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushAuctionLog",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bidder",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "auctionHost",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "bid": {
          "params": [
            "amount",
            "tryExtendCloseDate"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "shrinkCloseDate",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "MIN_AUCTION_AMOUNT": "100",
        "MAX_AUCTION_AMOUNT": "10000"
      }
    },
    "AuctionBuyRice": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AuctionBuyRice.php",
      "properties": {},
      "methods": {},
      "constants": {}
    },
    "AuctionSellRice": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AuctionSellRice.php",
      "properties": {},
      "methods": {},
      "constants": {}
    },
    "AuctionUniqueItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AuctionUniqueItem.php",
      "properties": {},
      "methods": {
        "openItemAuction": {
          "params": [
            "item",
            "general",
            "startAmount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "rollbackAuction": {
          "params": [],
          "statements": [
            {
              "kind": "noop"
            }
          ]
        },
        "bid": {
          "params": [
            "amount",
            "tryExtendCloseDate"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "setHostAsNeutral": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "(상인)"
              }
            }
          ]
        },
        "finishAuction": {
          "params": [
            "highestBid",
            "bidder"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "setHostAsNeutral",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "extendCloseDate",
                      "args": [
                        "variable",
                        true
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "extendLatestBidCloseDate",
                      "args": [
                        "nullkeyword"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "applyDB",
                      "args": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "setHostAsNeutral",
                                  "args": []
                                }
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "extendCloseDate",
                            "args": [
                              "variable",
                              true
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "extendLatestBidCloseDate",
                            "args": [
                              "nullkeyword"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "applyDB",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "call",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "COEFF_EXTENSION_MINUTES_LIMIT_UNIQUE_CNT": "24"
      }
    },
    "AutorunGeneralPolicy": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AutorunGeneralPolicy.php",
      "properties": {
        "일반내정": "일반내정",
        "긴급내정": "긴급내정",
        "전쟁내정": "전쟁내정",
        "금쌀구매": "금쌀구매",
        "상인무시": "상인무시",
        "징병": "징병",
        "모병": "모병",
        "한계징병": "한계징병",
        "고급병종": "고급병종",
        "전투준비": "전투준비",
        "소집해제": "소집해제",
        "출병": "출병",
        "NPC헌납": "NPC헌납",
        "NPC사망대비": "NPC사망대비",
        "후방워프": "후방워프",
        "전방워프": "전방워프",
        "내정워프": "내정워프",
        "귀환": "귀환",
        "국가선택": "국가선택",
        "집합": "집합",
        "건국": "건국",
        "선양": "선양",
        "default_priority": {},
        "canNPC사망대비": true,
        "can일반내정": true,
        "can긴급내정": true,
        "can전쟁내정": true,
        "can금쌀구매": true,
        "can상인무시": true,
        "can징병": true,
        "can모병": false,
        "can한계징병": false,
        "can고급병종": false,
        "can전투준비": true,
        "can소집해제": true,
        "can출병": true,
        "canNPC헌납": true,
        "can후방워프": true,
        "can전방워프": true,
        "can내정워프": true,
        "can귀환": true,
        "can국가선택": true,
        "can집합": false,
        "can건국": true,
        "can선양": false
      },
      "methods": {
        "doNPCState": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": true
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": true
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": true
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "__construct": {
          "params": [
            "general",
            "aiOptions",
            "nationPolicy",
            "serverPolicy",
            "nation",
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "doNPCState",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {}
    },
    "AutorunNationPolicy": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/AutorunNationPolicy.php",
      "properties": {
        "부대전방발령": "부대전방발령",
        "부대후방발령": "부대후방발령",
        "부대구출발령": "부대구출발령",
        "부대유저장후방발령": "부대유저장후방발령",
        "유저장후방발령": "유저장후방발령",
        "유저장전방발령": "유저장전방발령",
        "유저장구출발령": "유저장구출발령",
        "유저장내정발령": "유저장내정발령",
        "NPC후방발령": "NPC후방발령",
        "NPC전방발령": "NPC전방발령",
        "NPC구출발령": "NPC구출발령",
        "NPC내정발령": "NPC내정발령",
        "유저장긴급포상": "유저장긴급포상",
        "유저장포상": "유저장포상",
        "NPC긴급포상": "NPC긴급포상",
        "NPC포상": "NPC포상",
        "NPC몰수": "NPC몰수",
        "불가침제의": "불가침제의",
        "선전포고": "선전포고",
        "천도": "천도",
        "defaultPriority": {},
        "availableInstantTurn": {
          "유저장긴급포상": true,
          "유저장구출발령": true,
          "유저장후방발령": true,
          "유저장전방발령": true,
          "유저장내정발령": true,
          "유저장포상": true,
          "NPC긴급포상": true,
          "NPC구출발령": true,
          "NPC후방발령": true,
          "NPC내정발령": true,
          "NPC포상": true,
          "NPC전방발령": true
        },
        "priority": {},
        "can부대전방발령": true,
        "can부대후방발령": true,
        "can부대구출발령": true,
        "can부대유저장후방발령": true,
        "can유저장후방발령": true,
        "can유저장전방발령": true,
        "can유저장구출발령": true,
        "can유저장내정발령": true,
        "canNPC후방발령": true,
        "canNPC전방발령": true,
        "canNPC구출발령": true,
        "canNPC내정발령": true,
        "can유저장긴급포상": true,
        "can유저장포상": true,
        "canNPC긴급포상": true,
        "canNPC포상": true,
        "canNPC몰수": true,
        "can불가침제의": true,
        "can선전포고": true,
        "can천도": true,
        "reqNationGold": "10000",
        "reqNationRice": "12000",
        "CombatForce": {},
        "SupportForce": {},
        "DevelopForce": {},
        "reqHumanWarUrgentGold": "0",
        "reqHumanWarUrgentRice": "0",
        "reqHumanWarRecommandGold": "0",
        "reqHumanWarRecommandRice": "0",
        "reqHumanDevelGold": "10000",
        "reqHumanDevelRice": "10000",
        "reqNPCWarGold": "0",
        "reqNPCWarRice": "0",
        "reqNPCDevelGold": "0",
        "reqNPCDevelRice": "500",
        "minimumResourceActionAmount": "1000",
        "maximumResourceActionAmount": "10000",
        "minNPCWarLeadership": "40",
        "minWarCrew": "1500",
        "minNPCRecruitCityPopulation": "50000",
        "safeRecruitCityPopulationRatio": "0.5",
        "properWarTrainAtmos": "90",
        "cureThreshold": "10",
        "defaultPolicy": {
          "reqNationGold": "10000",
          "reqNationRice": "12000",
          "CombatForce": {},
          "SupportForce": {},
          "DevelopForce": {},
          "reqHumanWarUrgentGold": "0",
          "reqHumanWarUrgentRice": "0",
          "reqHumanWarRecommandGold": "0",
          "reqHumanWarRecommandRice": "0",
          "reqHumanDevelGold": "10000",
          "reqHumanDevelRice": "10000",
          "reqNPCWarGold": "0",
          "reqNPCWarRice": "0",
          "reqNPCDevelGold": "0",
          "reqNPCDevelRice": "500",
          "minimumResourceActionAmount": "1000",
          "maximumResourceActionAmount": "10000",
          "minNPCWarLeadership": "40",
          "minWarCrew": "1500",
          "minNPCRecruitCityPopulation": "50000",
          "safeRecruitCityPopulationRatio": "0.5",
          "properWarTrainAtmos": "90",
          "cureThreshold": "10"
        }
      },
      "methods": {
        "__construct": {
          "params": [
            "general",
            "aiOptions",
            "nationPolicy",
            "serverPolicy",
            "nation",
            "env"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "BaseGeneralTrigger": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseGeneralTrigger.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "BaseItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseItem.php",
      "properties": {
        "rawName": "-",
        "name": "-",
        "info": "",
        "consumable": false,
        "buyable": false,
        "reqSecu": "0"
      },
      "methods": {
        "getRawName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRawClassName": {
          "params": [
            "shortName"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "isConsumable": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "isBuyable": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getReqSecu": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "tryConsumeNow": {
          "params": [
            "general",
            "actionType",
            "command"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BaseNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseNation.php",
      "properties": {
        "name": "-",
        "info": "",
        "pros": "",
        "cons": ""
      },
      "methods": {
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "BaseSpecial": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseSpecial.php",
      "properties": {
        "id": "0",
        "name": "-",
        "info": ""
      },
      "methods": {},
      "constants": {}
    },
    "BaseStatItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseStatItem.php",
      "properties": {
        "statNick": "통솔",
        "statType": "leadership",
        "statValue": "1",
        "cost": "1000",
        "rawName": "노기",
        "consumable": false,
        "buyable": true
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "ITEM_TYPE": {
          "명마": {},
          "무기": {},
          "서적": {}
        }
      }
    },
    "BaseStaticEvent": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseStaticEvent.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "general",
            "destGeneral",
            "env",
            "params"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "BaseWarUnitTrigger": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/BaseWarUnitTrigger.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getUniqueID": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": ""
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": true
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": []
        },
        "processConsumableItem": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "아이템사용"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "아이템소모"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "deleteItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {
        "TYPE_NONE": "0",
        "TYPE_ITEM": "1",
        "TYPE_DEDUP_TYPE_BASE": "1024"
      }
    },
    "Betting": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Betting.php",
      "properties": {},
      "methods": {
        "genNextBettingID": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "invalidateCacheValue",
                "args": [
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "setValue",
                "args": [
                  "staticlookup",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "openBetting": {
          "params": [
            "info"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bettingStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            }
          ]
        },
        "__construct": {
          "params": [
            "bettingID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "_convertBettingKey": {
          "params": [
            "bettingType"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "purifyBettingKey": {
          "params": [
            "bettingType",
            "noValidate"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "sort",
                "args": [
                  "variable",
                  "name"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "closeBetting": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bettingStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            }
          ]
        },
        "convertBettingKey": {
          "params": [
            "bettingType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "bet": {
          "params": [
            "generalID",
            "userID",
            "bettingType",
            "amount"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insertUpdate",
                "args": [
                  "ng_betting",
                  "call",
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritStor",
                      "method": "setValue",
                      "args": [
                        "previous",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "push",
                      "args": [
                        "encapsed",
                        "inheritPoint"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "userLogger",
                      "method": "flush",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "rank_data",
                        {},
                        "general_id = %i AND type = %s",
                        "variable",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "no = %i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "rank_data",
                        {},
                        "general_id = %i AND type = \"betgold\"",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        "_calcRewardExclusive": {
          "params": [
            "bettingType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcReward": {
          "params": [
            "winnerType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "giveReward": {
          "params": [
            "winnerType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "foreach"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bettingStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            }
          ]
        }
      },
      "constants": {
        "LAST_BETTING_ID_KEY": "last_betting_id"
      }
    },
    "CityConstBase": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/CityConstBase.php",
      "properties": {
        "regionMap": {
          "1": "하북",
          "2": "중원",
          "3": "서북",
          "4": "서촉",
          "5": "남중",
          "6": "초",
          "7": "오월",
          "8": "동이",
          "하북": "1",
          "중원": "2",
          "서북": "3",
          "서촉": "4",
          "남중": "5",
          "초": "6",
          "오월": "7",
          "동이": "8"
        },
        "levelMap": {
          "1": "수",
          "2": "진",
          "3": "관",
          "4": "이",
          "5": "소",
          "6": "중",
          "7": "대",
          "8": "특",
          "수": "1",
          "진": "2",
          "관": "3",
          "이": "4",
          "소": "5",
          "중": "6",
          "대": "7",
          "특": "8"
        },
        "initCity": {},
        "buildInitCommon": {
          "trust": "50",
          "trade": "100"
        },
        "buildInit": {
          "수": {
            "pop": "5000",
            "agri": "100",
            "comm": "100",
            "secu": "100",
            "def": "500",
            "wall": "500"
          },
          "진": {
            "pop": "5000",
            "agri": "100",
            "comm": "100",
            "secu": "100",
            "def": "500",
            "wall": "500"
          },
          "관": {
            "pop": "10000",
            "agri": "100",
            "comm": "100",
            "secu": "100",
            "def": "1000",
            "wall": "1000"
          },
          "이": {
            "pop": "50000",
            "agri": "1000",
            "comm": "1000",
            "secu": "1000",
            "def": "1000",
            "wall": "1000"
          },
          "소": {
            "pop": "100000",
            "agri": "1000",
            "comm": "1000",
            "secu": "1000",
            "def": "2000",
            "wall": "2000"
          },
          "중": {
            "pop": "100000",
            "agri": "1000",
            "comm": "1000",
            "secu": "1000",
            "def": "3000",
            "wall": "3000"
          },
          "대": {
            "pop": "150000",
            "agri": "1000",
            "comm": "1000",
            "secu": "1000",
            "def": "4000",
            "wall": "4000"
          },
          "특": {
            "pop": "150000",
            "agri": "1000",
            "comm": "1000",
            "secu": "1000",
            "def": "5000",
            "wall": "5000"
          }
        }
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "all": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "byID": {
          "params": [
            "id"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "byName": {
          "params": [
            "name"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "byRegion": {
          "params": [
            "region"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "_generate": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "build": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "test",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "insert",
                "args": [
                  "city",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "CityHelper": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/CityHelper.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "flushCache": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "generateCache": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement"
            },
            {
              "kind": "expressionstatement"
            },
            {
              "kind": "expressionstatement"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "getAllCities": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "generateCache",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getAllNationCities": {
          "params": [
            "nationID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "generateCache",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCity": {
          "params": [
            "cityID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "generateCache",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCityByName": {
          "params": [
            "cityName"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "generateCache",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "trigger_error",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "CityInitialDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/CityInitialDetail.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "name",
            "level",
            "population",
            "agriculture",
            "commerce",
            "security",
            "defence",
            "wall",
            "region",
            "posX",
            "posY",
            "path"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "BaseCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/BaseCommand.php",
      "properties": {
        "actionName": "CommandName",
        "reqArg": false,
        "isLazyCalcReqTurn": false,
        "cachedPermissionToReserve": false,
        "cachedMinConditionMet": false,
        "cachedFullConditionMet": false,
        "isArgValid": false,
        "isInitStatic": true
      },
      "methods": {
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "initStatic": {
          "params": [],
          "statements": []
        },
        "__construct": {
          "params": [
            "generalObj",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "initStatic",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "staticlookup",
                      "value": true
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "init",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": true
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "staticlookup",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "initWithArg",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ]
              }
            }
          ]
        },
        "resetTestCache": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setCity": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "resetTestCache",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setRawCity",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNation": {
          "params": [
            "args"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "resetTestCache",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "nation": "0",
                  "name": "재야",
                  "color": "#000000",
                  "level": "0",
                  "capital": "0",
                  "gold": "0",
                  "rice": "2000",
                  "tech": "0",
                  "gennum": "1",
                  "aux": "{}"
                }
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "setDestGeneral": {
          "params": [
            "destGeneralObj"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "resetTestCache",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setDestCity": {
          "params": [
            "cityNo",
            "onlyName"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "resetTestCache",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setDestNation": {
          "params": [
            "nationID",
            "args"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "resetTestCache",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "nation": "0",
                  "name": "재야",
                  "color": "#000000",
                  "level": "0",
                  "capital": "0",
                  "gold": "0",
                  "rice": "2000",
                  "tech": "0",
                  "gennum": "1"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "init": {
          "params": [],
          "statements": []
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "staticlookup",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "argTest": {
          "params": [],
          "statements": []
        },
        "getArg": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNationID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getOfficerLevel": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRawClassName": {
          "params": [
            "shortName"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCompensationStyle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getLogger": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNextExecuteKey": {
          "params": [],
          "statements": []
        },
        "getNextAvailableTurn": {
          "params": [],
          "statements": []
        },
        "setNextAvailable": {
          "params": [
            "yearMonth"
          ],
          "statements": []
        },
        "testPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "testPermissionToReserve": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "unpackAux",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "testMinConditionMet": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "unpackAux",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "testFullConditionMet": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "인자가 올바르지 않습니다."
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": true
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "unpackAux",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getTermString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "addTermStack": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "hasPermissionToReserve": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "isArgValid": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "hasMinConditionMet": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "hasFullConditionMet": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getAlternativeCommand": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": []
        },
        "getPreReqTurn": {
          "params": [],
          "statements": []
        },
        "getPostReqTurn": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": []
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getLastTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setResultTurn": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "_setResultTurn",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "getResultTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_NPC능동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_NPC능동.php",
      "properties": {
        "actionName": "NPC능동"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_강행": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_강행.php",
      "properties": {
        "actionName": "강행",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup",
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ", 병력,훈련,사기↓)"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "update",
                            "args": [
                              "general",
                              {},
                              "no IN %li and nation=%i",
                              "variable",
                              "call"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "train",
                  "unary",
                  "20"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "unary",
                  "20"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_거병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_거병.php",
      "properties": {
        "actionName": "거병"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "3"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "insert",
                "args": [
                  "nation",
                  {
                    "color": "#330000",
                    "gold": "0",
                    "rate": "20",
                    "bill": "100",
                    "strategic_cmd_limit": "12",
                    "surlimit": "72",
                    "gennum": "1"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "insert",
                      "args": [
                        "diplomacy",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "nation_turn",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "12"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_건국": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_건국.php",
      "properties": {
        "actionName": "건국",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "conflict": "{}"
                  },
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "level": "1"
                  },
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "250"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable",
                  "건국"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_견문": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_견문.php",
      "properties": {
        "actionName": "견문"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "30"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "60"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "leadership_exp",
                        "2"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "strength_exp",
                        "2"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "intel_exp",
                        "2"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "gold",
                        "300"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "rice",
                        "300"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "gold",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "rice",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "injury",
                        "call",
                        "nullkeyword",
                        "80"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "injury",
                        "call",
                        "nullkeyword",
                        "80"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_군량매매": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_군량매매.php",
      "properties": {
        "actionName": "군량매매",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ]
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": "1.0"
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "throw"
                        }
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "100"
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "rice"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "gold"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "gold"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "rice"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "variable",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "30"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "50"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "minAmount": "100"
            }
          }
        }
      },
      "constants": {}
    },
    "che_귀환": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_귀환.php",
      "properties": {
        "actionName": "귀환"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_기술연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_기술연구.php",
      "properties": {
        "statKey": "intel",
        "actionKey": "기술",
        "actionName": "기술 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "updateMaxDomesticCritical",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "max_domestic_critical",
                        "0"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "4"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  "variable",
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_내정특기초기화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_내정특기초기화.php",
      "properties": {
        "actionName": "내정 특기 초기화",
        "specialType": "special",
        "speicalAge": "specage",
        "specialText": "내정 특기"
      },
      "methods": {},
      "constants": {}
    },
    "che_농지개간": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_농지개간.php",
      "properties": {
        "cityKey": "agri",
        "statKey": "intel",
        "actionKey": "농업",
        "actionName": "농지 개간",
        "debuffFront": "0.5"
      },
      "methods": {},
      "constants": {}
    },
    "che_단련": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_단련.php",
      "properties": {
        "actionName": "단련"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "variable",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_등용": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_등용.php",
      "properties": {
        "actionName": "등용",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "msg",
                      "method": "send",
                      "args": [
                        true
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "200"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {}
            }
          }
        }
      },
      "constants": {}
    },
    "che_등용수락": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_등용수락.php",
      "properties": {
        "actionName": "등용 수락",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "addExperience",
                "args": [
                  "100"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "addDedication",
                "args": [
                  "100"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "gold",
                              "staticlookup"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "rice",
                              "staticlookup"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "experience",
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addExperience",
                      "args": [
                        "0",
                        "boolean"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "dedication",
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addDedication",
                      "args": [
                        "0",
                        "boolean"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "betray",
                        "1",
                        "nullkeyword",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addExperience",
                      "args": [
                        "100"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addDedication",
                      "args": [
                        "100"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "killturn",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        "variable",
                        "nation=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  "variable",
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "propertylookup",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "permission",
                  "normal"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {
                          "troop": "0"
                        },
                        "troop_leader=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "delete",
                      "args": [
                        "troop",
                        "troop_leader=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_랜덤임관": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_랜덤임관.php",
      "properties": {
        "actionName": "무작위 국가로 임관"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "무작위 국가로 임관"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "무작위 국가로 임관"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "shuffle",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "700"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "100"
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "call"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable",
                  "랜덤 임관"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_모반시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_모반시도.php",
      "properties": {
        "actionName": "모반시도"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "12"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordGeneral",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordGeneral",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordGeneral",
                "method": "multiplyVar",
                "args": [
                  "experience",
                  "0.7"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lordGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_모병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_모병.php",
      "properties": {
        "actionName": "모병",
        "costOffset": "2",
        "isInitStatic": false
      },
      "methods": {
        "initStatic": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_무작위건국": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_무작위건국.php",
      "properties": {
        "actionName": "무작위 도시 건국",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setCity",
                      "args": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setCity",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "nation = %i",
                        "call"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "conflict": "{}"
                  },
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "level": "1"
                  },
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable",
                  "건국"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_물자조달": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_물자조달.php",
      "properties": {
        "actionName": "물자조달",
        "debuffFront": "0.5"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.3"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "list",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              },
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_방랑": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_방랑.php",
      "properties": {
        "actionName": "방랑"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "DeleteConflict",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "color": "#330000",
                    "level": "0",
                    "type": "None",
                    "tech": "0",
                    "capital": "0"
                  },
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "makelimit": "12"
                  },
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "makelimit",
                  "12"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "officer_level": "1",
                    "officer_city": "0"
                  },
                  "nation=%i AND officer_level < 12",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "nation": "0",
                    "front": "0",
                    "conflict": "{}"
                  },
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "2",
                    "term": "0"
                  },
                  "me=%i OR you=%i",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_사기진작": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_사기진작.php",
      "properties": {
        "actionName": "사기진작"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "atmos",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "train",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "variable",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_상업투자": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_상업투자.php",
      "properties": {
        "cityKey": "comm",
        "statKey": "intel",
        "actionKey": "상업",
        "actionName": "상업 투자",
        "debuffFront": "0.5"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "leadership": "통솔경험",
                  "strength": "무력경험",
                  "intel": "지력경험"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getCompensationStyle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "calcBaseScore": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "updateMaxDomesticCritical",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "max_domestic_critical",
                        "0"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "list",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              },
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  "variable",
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_선동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_선동.php",
      "properties": {
        "actionName": "선동",
        "statType": "leadership",
        "injuryGeneral": true
      },
      "methods": {
        "affectDestCity": {
          "params": [
            "rng",
            "injuryCount"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "32"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "che_선양": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_선양.php",
      "properties": {
        "actionName": "선양",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "12"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "multiplyVar",
                "args": [
                  "experience",
                  "0.7"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {}
            }
          }
        }
      },
      "constants": {}
    },
    "che_성벽보수": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_성벽보수.php",
      "properties": {
        "cityKey": "wall",
        "statKey": "strength",
        "actionKey": "성벽",
        "actionName": "성벽 보수",
        "debuffFront": "0.25"
      },
      "methods": {},
      "constants": {}
    },
    "che_소집해제": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_소집해제.php",
      "properties": {
        "actionName": "소집해제"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "crew",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_수비강화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_수비강화.php",
      "properties": {
        "cityKey": "def",
        "statKey": "strength",
        "actionKey": "수비",
        "actionName": "수비 강화",
        "debuffFront": "0.5"
      },
      "methods": {},
      "constants": {}
    },
    "che_숙련전환": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_숙련전환.php",
      "properties": {
        "actionName": "숙련전환",
        "reqArg": true,
        "decreaseCoeff": "0.4",
        "convertCoeff": "0.9"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "10"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "2"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_요양": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_요양.php",
      "properties": {
        "actionName": "요양"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "10"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "7"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "injury",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_은퇴": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_은퇴.php",
      "properties": {
        "actionName": "은퇴",
        "reqAge": "60"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "CheckHall",
                      "args": [
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "rebirth",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_이동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_이동.php",
      "properties": {
        "actionName": "이동",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup",
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ", 사기↓)"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "50"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "update",
                            "args": [
                              "general",
                              {},
                              "no IN %li",
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "unary",
                  "20"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_인재탐색": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_인재탐색.php",
      "properties": {
        "actionName": "인재탐색"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "calcFoundProp": {
          "params": [
            "maxGenCnt",
            "totalGenCnt",
            "totalNpcCnt"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "100"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "70"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "gold",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "rice",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addExperience",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addDedication",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "variable",
                        "1"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "checkStatChange",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "tryUniqueItemLottery",
                      "args": [
                        "call",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "applyDB",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "발견"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "무": "6",
                  "지": "6",
                  "무지": "3"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "setSpecial",
                "args": [
                  "None",
                  "None"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "setNPCType",
                "args": [
                  "3"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "setMoney",
                "args": [
                  "1000",
                  "1000"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "setLifeSpan",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "setSpecYear",
                "args": [
                  "bin",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "fillRemainSpecAsRandom",
                "args": [
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newNPC",
                "method": "build",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "pickedNPC",
                "method": "occupyGeneralName",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "200"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "300"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "3"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_임관": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_임관.php",
      "properties": {
        "actionName": "임관",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "지정한 국가로 임관"
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "variable",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "700"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "100"
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "call"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_장비매매": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_장비매매.php",
      "properties": {
        "actionName": "장비매매",
        "reqArg": true,
        "itemMap": {
          "horse": "명마",
          "weapon": "무기",
          "book": "서적",
          "item": "도구"
        }
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "gold",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setItem",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "onArbitraryAction",
                      "args": [
                        "variable",
                        "variable",
                        "장비매매",
                        "구매",
                        {}
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "gold",
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "onArbitraryAction",
                      "args": [
                        "variable",
                        "variable",
                        "장비매매",
                        "판매",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setItem",
                      "args": [
                        "variable",
                        "nullkeyword"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGlobalActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGlobalHistoryLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "10"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_장수대상임관": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_장수대상임관.php",
      "properties": {
        "actionName": "장수를 따라 임관",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "장수를 따라 임관"
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "call",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "700"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "100"
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "call"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {}
            }
          }
        }
      },
      "constants": {}
    },
    "che_전투태세": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_전투태세.php",
      "properties": {
        "actionName": "전투태세"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "3"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "turnResult",
                      "method": "setTerm",
                      "args": [
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "applyDB",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "train",
                  "0",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "0",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "bin",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "3"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_전투특기초기화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_전투특기초기화.php",
      "properties": {
        "actionName": "전투 특기 초기화",
        "specialType": "special2",
        "speicalAge": "specage2",
        "specialText": "전투 특기"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "60"
        },
        "getTermString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "staticlookup",
                  "None"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "staticlookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_접경귀환": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_접경귀환.php",
      "properties": {
        "actionName": "접경귀환"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "3칸 이내에 아국 도시가 없습니다."
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_정착장려": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_정착장려.php",
      "properties": {
        "cityKey": "pop",
        "statKey": "leadership",
        "actionKey": "인구",
        "actionName": "정착 장려"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "leadership": "통솔경험",
                  "strength": "무력경험",
                  "intel": "지력경험"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getCompensationStyle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "calcBaseScore": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "updateMaxDomesticCritical",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "max_domestic_critical",
                        "0"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "10"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  "variable",
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_주민선정": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_주민선정.php",
      "properties": {
        "cityKey": "trust",
        "statKey": "leadership",
        "actionKey": "민심",
        "actionName": "주민 선정"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "leadership": "통솔경험",
                  "strength": "무력경험",
                  "intel": "지력경험"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getCompensationStyle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "calcBaseScore": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "updateMaxDomesticCritical",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "max_domestic_critical",
                        "0"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "10"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  "variable",
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_증여": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_증여.php",
      "properties": {
        "actionName": "증여",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ]
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "increaseVarWithLimit",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "variable",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {},
              "minAmount": "100"
            }
          }
        }
      },
      "constants": {}
    },
    "che_집합": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_집합.php",
      "properties": {
        "actionName": "집합"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "no IN %li",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_첩보": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_첩보.php",
      "properties": {
        "actionName": "첩보",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "variable",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "variable",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "bin",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": "<M>↑</>압도"
                                }
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "3"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_출병": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_출병.php",
      "properties": {
        "actionName": "출병",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "999"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "do"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "43",
                    "term": "3"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "43"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "3"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "bin"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseInheritancePoint",
                      "args": [
                        "staticlookup",
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "processWar",
                "args": [
                  "variable",
                  "variable",
                  "propertylookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_치안강화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_치안강화.php",
      "properties": {
        "cityKey": "secu",
        "statKey": "strength",
        "actionKey": "치안",
        "actionName": "치안 강화",
        "debuffFront": "1"
      },
      "methods": {},
      "constants": {}
    },
    "che_탈취": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_탈취.php",
      "properties": {
        "actionName": "탈취",
        "statType": "strength",
        "injuryGeneral": false
      },
      "methods": {
        "affectDestCity": {
          "params": [
            "rng",
            "injuryCount"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        {},
                        "nation=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "city",
                        {
                          "state": "34"
                        },
                        "city=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "city",
                        {
                          "state": "34"
                        },
                        "city=%i",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        {},
                        "nation=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "gold",
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "rice",
                        "bin"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "gold",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "rice",
                        "variable"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "32"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "che_파괴": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_파괴.php",
      "properties": {
        "actionName": "파괴",
        "statType": "strength",
        "injuryGeneral": true
      },
      "methods": {
        "affectDestCity": {
          "params": [
            "rng",
            "injuryCount"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "32"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "che_하야": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_하야.php",
      "properties": {
        "actionName": "하야"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "experience",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "0",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "dedication",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "0",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "betray",
                  "1",
                  "nullkeyword",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "permission",
                  "normal"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "gold",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "rice",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_level",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "officer_city",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "belong",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "makelimit",
                  "12"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {
                          "troop": "0"
                        },
                        "troop = %i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "delete",
                      "args": [
                        "troop",
                        "troop_leader=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "propertylookup",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_해산": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_해산.php",
      "properties": {
        "actionName": "해산"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "nation=%i AND gold>%i",
                  "variable",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "nation=%i AND gold>%i",
                  "variable",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "0",
                  "0",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "0",
                  "0",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "makelimit",
                  "12"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "runEventHandler",
                "args": [
                  "variable",
                  "nullkeyword",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_헌납": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_헌납.php",
      "properties": {
        "actionName": "헌납",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ]
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "variable",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "minAmount": "100"
            }
          }
        }
      },
      "constants": {}
    },
    "che_화계": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_화계.php",
      "properties": {
        "actionName": "화계",
        "reqArg": true,
        "statType": "intel",
        "injuryGeneral": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "calcSabotageAttackProb": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcSabotageDefenceProb": {
          "params": [
            "destCityGeneralList"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "leadership": "통솔경험",
                  "strength": "무력경험",
                  "intel": "지력경험"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "affectDestCity": {
          "params": [
            "rng",
            "injuryCount"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "32"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "gold",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "rice",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addExperience",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "addDedication",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "bin",
                        "1"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "checkStatChange",
                      "args": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "applyDB",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "staticlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "affectDestCity",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "deleteItem",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "bin",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_훈련": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/che_훈련.php",
      "properties": {
        "actionName": "훈련"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "70"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "train",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "atmos",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "variable",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "cr_건국": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/cr_건국.php",
      "properties": {
        "actionName": "건국",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1000"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "conflict": "{}"
                  },
                  "city=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "level": "1"
                  },
                  "nation=%i",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable",
                  "건국"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "cr_맹훈련": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/General/cr_맹훈련.php",
      "properties": {
        "actionName": "맹훈련"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": ")"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "150"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "100"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "train",
                  "variable",
                  "0",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "variable",
                  "0",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDex",
                "args": [
                  "call",
                  "bin",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "leadership_exp",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "checkStatChange",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "tryUniqueItemLottery",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "휴식": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/휴식.php",
      "properties": {
        "actionName": "휴식"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "GeneralCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/GeneralCommand.php",
      "properties": {},
      "methods": {
        "getNextExecuteKey": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNextAvailableTurn": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNextAvailable": {
          "params": [
            "yearMonth"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lastExecuteStor",
                "method": "setValue",
                "args": [
                  "call",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "che_감축": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_감축.php",
      "properties": {
        "actionName": "감축"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "5"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "addTermStack": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_국기변경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_국기변경.php",
      "properties": {
        "actionName": "국기변경",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_국호변경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_국호변경.php",
      "properties": {
        "actionName": "국호변경",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_급습": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_급습.php",
      "properties": {
        "actionName": "급습",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {},
                  "(me = %i AND you = %i) OR (you = %i AND me = %i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_몰수": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_몰수.php",
      "properties": {
        "actionName": "몰수",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "msg",
                      "method": "send",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "increaseVarWithLimit",
                "args": [
                  "variable",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {},
              "minAmount": "100"
            }
          }
        }
      },
      "constants": {}
    },
    "che_무작위수도이전": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_무작위수도이전.php",
      "properties": {
        "actionName": "무작위 수도 이전"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "variable",
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "conflict": "{}"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "nation": "0",
                    "front": "0",
                    "conflict": "{}",
                    "officer_set": "0"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "no IN %li",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_물자원조": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_물자원조.php",
      "properties": {
        "actionName": "원조",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {
                  "amountList": {}
                }
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "variable",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "12"
        },
        "getNextAvailableTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setNextAvailable": {
          "params": [
            "yearMonth"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationStor",
                "method": "setValue",
                "args": [
                  "recv_assist",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "minAmount": "1000"
            }
          }
        }
      },
      "constants": {}
    },
    "che_발령": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_발령.php",
      "properties": {
        "actionName": "발령",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getFailString": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setVar",
                "args": [
                  "city",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setAuxVar",
                "args": [
                  "last발령",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {}
            }
          }
        }
      },
      "constants": {}
    },
    "che_백성동원": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_백성동원.php",
      "properties": {
        "actionName": "백성동원",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_부대탈퇴지시": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_부대탈퇴지시.php",
      "properties": {
        "actionName": "부대 탈퇴 지시",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "setVar",
                "args": [
                  "troop",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {}
            }
          }
        }
      },
      "constants": {}
    },
    "che_불가침수락": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_불가침수락.php",
      "properties": {
        "actionName": "불가침 수락",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationStor",
                "method": "setValue",
                "args": [
                  "resp_assist",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "7"
                  },
                  "(me=%i AND you=%i) OR (you=%i AND me=%i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_불가침제의": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_불가침제의.php",
      "properties": {
        "actionName": "불가침 제의",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "validUntil",
                "method": "add",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_불가침파기수락": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_불가침파기수락.php",
      "properties": {
        "actionName": "불가침 파기 수락",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "2",
                    "term": "0"
                  },
                  "(me=%i AND you=%i) OR (you=%i AND me=%i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_불가침파기제의": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_불가침파기제의.php",
      "properties": {
        "actionName": "불가침 파기 제의",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "validUntil",
                "method": "add",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_선전포고": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_선전포고.php",
      "properties": {
        "actionName": "선전포고",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "1",
                    "term": "24"
                  },
                  "(me=%i AND you=%i) OR (me=%i AND you=%i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_수몰": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_수몰.php",
      "properties": {
        "actionName": "수몰",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "2"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_의병모집": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_의병모집.php",
      "properties": {
        "actionName": "의병모집"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "2"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "무": "5",
                  "지": "5"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_이호경식": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_이호경식.php",
      "properties": {
        "actionName": "이호경식",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "1"
                  },
                  "(me = %i AND you = %i) OR (you = %i AND me = %i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\SetNationFront",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\SetNationFront",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_종전수락": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_종전수락.php",
      "properties": {
        "actionName": "종전 수락",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "canDisplay": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "2",
                    "term": "0"
                  },
                  "(me=%i AND you=%i) OR (you=%i AND me=%i)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\SetNationFront",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\SetNationFront",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_종전제의": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_종전제의.php",
      "properties": {
        "actionName": "종전 제의",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "validUntil",
                "method": "add",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_증축": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_증축.php",
      "properties": {
        "actionName": "증축"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "5"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "addTermStack": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_천도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_천도.php",
      "properties": {
        "actionName": "천도",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getDistance": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "addTermStack": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setResultTurn",
                      "args": [
                        "new"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_초토화": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_초토화.php",
      "properties": {
        "actionName": "초토화",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "2"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "24"
        },
        "getNextAvailableTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setNextAvailable": {
          "params": [
            "yearMonth"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcReturnAmount": {
          "params": [
            "destCity"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "nation = %i AND officer_level >= 5 AND no!=%i",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "nation = %i AND no!=%i",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "betray",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "nation": "0",
                    "front": "0",
                    "conflict": "{}"
                  },
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "\\sammo\\SetNationFront",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_포상": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_포상.php",
      "properties": {
        "actionName": "포상",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ]
              }
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destGeneral",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {
              "generalsKey": {},
              "minAmount": "100"
            }
          }
        }
      },
      "constants": {}
    },
    "che_피장파장": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_피장파장.php",
      "properties": {
        "actionName": "피장파장",
        "reqArg": true,
        "delayCnt": "60"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "8"
        },
        "getTargetPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "setValue",
                "args": [
                  "call",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationStor",
                "method": "setValue",
                "args": [
                  "call",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "che_필사즉생": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_필사즉생.php",
      "properties": {
        "actionName": "필사즉생"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "2"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "train",
                        "100"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "atmos",
                        "100"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "<M>필사즉생</>을 발동"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_허보": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/che_허보.php",
      "properties": {
        "actionName": "허보",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestNation",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "1"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "destNationLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {}
    },
    "cr_인구이동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/cr_인구이동.php",
      "properties": {
        "actionName": "인구이동",
        "reqArg": true
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "initWithArg": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setDestCity",
                "args": [
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "city=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "exportJSVars": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "procRes": {}
          }
        }
      },
      "constants": {
        "AMOUNT_LIMIT": "100000"
      }
    },
    "event_극병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_극병연구.php",
      "properties": {
        "actionName": "극병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "23"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_대검병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_대검병연구.php",
      "properties": {
        "actionName": "대검병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "11"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_무희연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_무희연구.php",
      "properties": {
        "actionName": "무희 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "23"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_산저병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_산저병연구.php",
      "properties": {
        "actionName": "산저병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "11"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_상병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_상병연구.php",
      "properties": {
        "actionName": "상병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "23"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_원융노병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_원융노병연구.php",
      "properties": {
        "actionName": "원융노병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "23"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_음귀병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_음귀병연구.php",
      "properties": {
        "actionName": "음귀병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "11"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_화륜차연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_화륜차연구.php",
      "properties": {
        "actionName": "화륜차 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "23"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_화시병연구": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/Nation/event_화시병연구.php",
      "properties": {
        "actionName": "화시병 연구"
      },
      "methods": {
        "argTest": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "init": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCity",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setNation",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommandDetailTitle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getPreReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "11"
        },
        "getPostReqTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "getCost": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "run": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushNationalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseInheritancePoint",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "handleEvent",
                "args": [
                  "propertylookup",
                  "propertylookup",
                  "staticlookup",
                  "propertylookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setResultTurn",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "NationCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Command/NationCommand.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "generalObj",
            "env",
            "lastTurn",
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": [
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            }
          ]
        },
        "getLastTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setResultTurn": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getResultTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNextExecuteKey": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNextAvailableTurn": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNextAvailable": {
          "params": [
            "yearMonth"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "setValue",
                "args": [
                  "call",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "AdhocCallback": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AdhocCallback.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowDiplomacyBetweenStatus": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowDiplomacyBetweenStatus.php",
      "properties": {
        "allowDipCodeList": {},
        "errMsg": ""
      },
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowDiplomacyStatus": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowDiplomacyStatus.php",
      "properties": {
        "allowStatus": {}
      },
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowDiplomacyWithTerm": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowDiplomacyWithTerm.php",
      "properties": {
        "errMsg": ""
      },
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowJoinAction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowJoinAction.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowJoinDestNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowJoinDestNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "임관이 제한되고 있습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "임관이 금지되어 있습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "유저장은 태수국에 임관할 수 없습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "이민족 국가에 임관할 수 없습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "AllowRebellion": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowRebellion.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "이미 군주입니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "군주가 활동중입니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "군주가 NPC입니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "AllowStrategicCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowStrategicCommand.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "현재 전쟁 금지입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AllowWar": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AllowWar.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "현재 전쟁 금지입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AlwaysFail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AlwaysFail.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AvailableRecruitCrewType": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AvailableRecruitCrewType.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "현재 선택할 수 없는 병종입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AvailableStrategicCommand": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/AvailableStrategicCommand.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "전략기한이 남았습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BattleGroundCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/BattleGroundCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "교전중인 국가의 도시가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BeChief": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/BeChief.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "수뇌가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BeLord": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/BeLord.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "군주가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BeNeutral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/BeNeutral.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "재야가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "BeOpeningPart": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/BeOpeningPart.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "초반이 지났습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "CheckNationNameDuplicate": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/CheckNationNameDuplicate.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "존재하는 국가명입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "Constraint": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/Constraint.php",
      "properties": {
        "tested": false
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "test": {
          "params": [],
          "statements": []
        },
        "requiredValueType": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setGeneral": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setCity": {
          "params": [
            "city"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setNation": {
          "params": [
            "nation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setArg": {
          "params": [
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setEnv": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setCmdArg": {
          "params": [
            "cmd_arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setDestGeneral": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setDestCity": {
          "params": [
            "city"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setDestNation": {
          "params": [
            "nation"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "build": {
          "params": [
            "input"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "reason": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "testAll": {
          "params": [
            "constraintPacks",
            "input",
            "env"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "REQ_GENERAL": "0x10",
        "REQ_CITY": "0x20",
        "REQ_NATION": "0x40",
        "REQ_ARG": "0x80",
        "REQ_DEST_GENERAL": "0x100",
        "REQ_DEST_CITY": "0x200",
        "REQ_DEST_NATION": "0x400",
        "REQ_VALUES": "0"
      }
    },
    "ConstraintHelper": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ConstraintHelper.php",
      "properties": {},
      "methods": {
        "AdhocCallback": {
          "params": [
            "callback"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowDiplomacyStatus": {
          "params": [
            "nationID",
            "allowList",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowDiplomacyBetweenStatus": {
          "params": [
            "allowDipCodeList",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowDiplomacyWithTerm": {
          "params": [
            "allowDipCode",
            "allowMinTerm",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowJoinAction": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowJoinDestNation": {
          "params": [
            "relYear"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowRebellion": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AllowWar": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AlwaysFail": {
          "params": [
            "failMessage"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AvailableRecruitCrewType": {
          "params": [
            "crewTypeID"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "AvailableStrategicCommand": {
          "params": [
            "allowTurnCnt"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "BattleGroundCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "BeChief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "BeLord": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "BeNeutral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "BeOpeningPart": {
          "params": [
            "relYear"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "CheckNationNameDuplicate": {
          "params": [
            "nationName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ConstructableCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "DifferentNationDestGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "DifferentDestNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "DisallowDiplomacyBetweenStatus": {
          "params": [
            "disallowList"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "DisallowDiplomacyStatus": {
          "params": [
            "nationID",
            "disallowList"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ExistsAllowJoinNation": {
          "params": [
            "relYear",
            "excludeNationList"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ExistsDestGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ExistsDestNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "FriendlyDestGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "HasRoute": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "HasRouteWithEnemy": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "MustBeNPC": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "MustBeTroopLeader": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NearCity": {
          "params": [
            "distance"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NearNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NeutralCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotBeNeutral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotCapital": {
          "params": [
            "ignoreOfficer"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotChief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotLord": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotNeutralDestCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotOccupiedCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotOccupiedDestCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotOpeningPart": {
          "params": [
            "relYear"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotSameDestCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NotWanderingNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "NoPenalty": {
          "params": [
            "penaltyKey"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "OccupiedCity": {
          "params": [
            "allowNeutral"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "OccupiedDestCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "RemainCityCapacity": {
          "params": [
            "key",
            "actionName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "RemainCityTrust": {
          "params": [
            "actionName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqCityCapacity": {
          "params": [
            "key",
            "keyNick",
            "reqVal"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqCityTrust": {
          "params": [
            "minTrust"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqCityValue": {
          "params": [
            "key",
            "keyNick",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqDestCityValue": {
          "params": [
            "key",
            "keyNick",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqCityTrader": {
          "params": [
            "npcType"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqDestNationValue": {
          "params": [
            "key",
            "keyNick",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqEnvValue": {
          "params": [
            "key",
            "comp",
            "reqVal",
            "failMessage"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralAtmosMargin": {
          "params": [
            "maxAtmos"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralCrew": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralCrewMargin": {
          "params": [
            "crewTypeID"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralGold": {
          "params": [
            "reqGold"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralRice": {
          "params": [
            "reqRice"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralTrainMargin": {
          "params": [
            "maxTrain"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqGeneralValue": {
          "params": [
            "key",
            "keyNick",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqNationGold": {
          "params": [
            "reqGold"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqNationRice": {
          "params": [
            "reqRice"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqNationValue": {
          "params": [
            "key",
            "keyNick",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqNationAuxValue": {
          "params": [
            "key",
            "defaultValue",
            "comp",
            "reqVal",
            "errMsg"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "ReqTroopMembers": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "SuppliedCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "SuppliedDestCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "WanderingNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "ConstructableCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ConstructableCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "공백지가 아닙니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "중, 소 도시에만 가능합니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "DifferentDestNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/DifferentDestNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "이미 같은 국가입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "DifferentNationDestGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/DifferentNationDestGeneral.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "같은 국가의 장수입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "DisallowDiplomacyBetweenStatus": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/DisallowDiplomacyBetweenStatus.php",
      "properties": {
        "disallowStatus": {}
      },
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "DisallowDiplomacyStatus": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/DisallowDiplomacyStatus.php",
      "properties": {
        "disallowStatus": {}
      },
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ExistsAllowJoinNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ExistsAllowJoinNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "임관할 국가가 없습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ExistsDestGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ExistsDestGeneral.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "없는 장수입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ExistsDestNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ExistsDestNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "멸망한 국가입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {
        "REQ_VALUES": "0"
      }
    },
    "FriendlyDestGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/FriendlyDestGeneral.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "아국 장수가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "HasRoute": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/HasRoute.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "경로에 도달할 방법이 없습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "HasRouteWithEnemy": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/HasRouteWithEnemy.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "교전중인 국가가 아닙니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "경로에 도달할 방법이 없습니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "MustBeNPC": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/MustBeNPC.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "NPC여야 합니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "MustBeTroopLeader": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/MustBeTroopLeader.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "부대장이 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NearCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NearCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "인접도시가 아닙니다."
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "거리가 너무 멉니다."
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NearNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NearNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "인접 국가가 아닙니다."
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "NeutralCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NeutralCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "공백지가 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NoPenalty": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NoPenalty.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotBeNeutral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotBeNeutral.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "재야입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotCapital": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotCapital.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "이미 수도입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotChief": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotChief.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "수뇌입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotLord": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotLord.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "군주입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotNeutralDestCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotNeutralDestCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "공백지입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotOccupiedCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotOccupiedCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "아국입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotOccupiedDestCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotOccupiedDestCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "아국입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotOpeningPart": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotOpeningPart.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "초반 제한 중에는 불가능합니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotSameDestCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotSameDestCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "같은 도시입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "NotWanderingNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/NotWanderingNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "방랑군은 불가능합니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "OccupiedCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/OccupiedCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "아국이 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "OccupiedDestCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/OccupiedDestCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "대상 도시가 아국이 아닙니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "RemainCityCapacity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/RemainCityCapacity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "RemainCityTrust": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/RemainCityTrust.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "trust"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "100"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqCityCapacity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqCityCapacity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqCityTrader": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqCityTrader.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "도시에 상인이 없습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqCityTrust": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqCityTrust.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "민심"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "trust"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "민심이 낮아 주민들이 도망갑니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqCityValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqCityValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqDestCityValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqDestCityValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqDestNationValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqDestNationValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqEnvValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqEnvValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralAtmosMargin": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralAtmosMargin.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "이미 사기는 하늘을 찌를듯 합니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralCrew": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralCrew.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "병사가 모자랍니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralCrewMargin": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralCrewMargin.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "이미 많은 병력을 보유하고 있습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralGold": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralGold.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "자금이 모자랍니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralRice": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralRice.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "군량이 모자랍니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralTrainMargin": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralTrainMargin.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "병사들은 이미 정예병사들입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqGeneralValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqGeneralValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqNationAuxValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqNationAuxValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqNationGold": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqNationGold.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "국고가 부족합니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqNationRice": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqNationRice.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "병량이 부족합니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqNationValue": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqNationValue.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "ReqTroopMembers": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/ReqTroopMembers.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "집합 가능한 부대원이 없습니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "SuppliedCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/SuppliedCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "고립된 도시입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "SuppliedDestCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/SuppliedDestCity.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "고립된 도시입니다."
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "WanderingNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Constraint/WanderingNation.php",
      "properties": {},
      "methods": {
        "checkInputValues": {
          "params": [
            "throwExeception"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "test": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkInputValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "방랑군이어야 합니다"
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "AuctionBidItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/AuctionBidItem.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "no",
            "auctionID",
            "owner",
            "generalID",
            "amount",
            "date",
            "aux"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "AuctionBidItemData": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/AuctionBidItemData.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "ownerName",
            "generalName",
            "tryExtendCloseDate"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "AuctionInfo": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/AuctionInfo.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "type",
            "finished",
            "target",
            "hostGeneralID",
            "reqResource",
            "openDate",
            "closeDate",
            "detail"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "AuctionInfoDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/AuctionInfoDetail.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "title",
            "hostName",
            "amount",
            "isReverse",
            "startBidAmount",
            "finishBidAmount",
            "remainCloseDateExtensionCnt",
            "availableLatestBidCloseDate"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "BettingInfo": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/BettingInfo.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "type",
            "name",
            "finished",
            "selectCnt",
            "isExclusive",
            "reqInheritancePoint",
            "openYearMonth",
            "closeYearMonth",
            "candidates",
            "winner"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "BettingItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/BettingItem.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "rowID",
            "bettingID",
            "generalID",
            "userID",
            "bettingType",
            "amount"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "GeneralAccessLog": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/GeneralAccessLog.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "generalID",
            "userID",
            "lastRefresh",
            "refresh",
            "refreshTotal",
            "refreshScore",
            "refreshScoreTotal"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "MenuItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/MenuItem.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "name",
            "url",
            "funcCall",
            "icon",
            "newTab",
            "condHighlightVar",
            "condShowVar"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "item"
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "MenuLine": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/MenuLine.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "line"
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "MenuMulti": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/MenuMulti.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "name",
            "subMenu"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "multi"
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "MenuSplit": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/MenuSplit.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "main",
            "subMenu"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "split"
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "SelectItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/SelectItem.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "title",
            "info",
            "isHtml",
            "aux"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "VoteComment": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/VoteComment.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "voteID",
            "generalID",
            "nationID",
            "nationName",
            "generalName",
            "text",
            "date"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "VoteInfo": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DTO/VoteInfo.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "title",
            "multipleOptions",
            "opener",
            "startDate",
            "endDate",
            "options"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "DiplomaticMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DiplomaticMessage.php",
      "properties": {
        "diplomaticType": "",
        "diplomacyName": "",
        "diplomacyDetail": "",
        "validDiplomacy": true
      },
      "methods": {
        "__construct": {
          "params": [
            "msgType",
            "src",
            "dest",
            "msg",
            "date",
            "validUntil",
            "msgOption"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": [
                  "variadic"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "checkDiplomaticMessageValidation": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "noAggression": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "run",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "setNextAvailable",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "cancelNA": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "run",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "setNextAvailable",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "stopWar": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "run",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "setNextAvailable",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "agreeMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "_declineMessage",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "variable",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "_declineMessage",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "invalidate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newMsg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newMsg",
                "method": "send",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "_declineMessage": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "invalidate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "declineMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "_declineMessage",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "ACCEPTED": "1",
        "INVALID": "0",
        "TYPE_NO_AGGRESSION": "noAggression",
        "TYPE_CANCEL_NA": "cancelNA",
        "TYPE_STOP_WAR": "stopWar"
      }
    },
    "DummyGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DummyGeneral.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "initLogger"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "no": "0",
                  "name": "Dummy",
                  "npc": "3",
                  "city": "0",
                  "nation": "0",
                  "officer_level": "0",
                  "turntime": "2012-03-04 05:06:07.000000",
                  "experience": "0",
                  "dedication": "0",
                  "gold": "0",
                  "rice": "0",
                  "leadership": "10",
                  "strength": "10",
                  "intel": "10",
                  "imgsvr": "0",
                  "picture": "default.jpg"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initLogger",
                      "args": [
                        "1",
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "setCrewType": {
          "params": [
            "crewType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getInheritancePoint": {
          "params": [
            "key",
            "aux",
            "forceCalc"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "0"
        },
        "setInheritancePoint": {
          "params": [
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "increaseInheritancePoint": {
          "params": [
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initLogger",
                      "args": [
                        "call",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "DummyGeneralLite": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/DummyGeneralLite.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "initLogger"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "no": "0",
                  "name": "Dummy",
                  "npc": "3",
                  "city": "0",
                  "nation": "0",
                  "officer_level": "0",
                  "turntime": "2012-03-04 05:06:07.000000",
                  "experience": "0",
                  "dedication": "0",
                  "gold": "0",
                  "rice": "0",
                  "leadership": "10",
                  "strength": "10",
                  "intel": "10",
                  "imgsvr": "0",
                  "picture": "default.jpg"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initLogger",
                      "args": [
                        "1",
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initLogger",
                      "args": [
                        "call",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "AddGlobalBetray": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/AddGlobalBetray.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "cnt",
            "ifMax"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "betray <= %i",
                  "propertylookup"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "AssignGeneralSpeciality": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/AssignGeneralSpeciality.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {}
    },
    "AutoDeleteInvader": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/AutoDeleteInvader.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "nationID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "delete",
                      "args": [
                        "event",
                        "id = %i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general_turn",
                  {
                    "action": "che_방랑",
                    "arg": "[]",
                    "brief": "이민족 방랑"
                  },
                  "general_id = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "event",
                  "id = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "BlockScoutAction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/BlockScoutAction.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "blockChangeScout"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "scout": "1"
                  },
                  true
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "gameStor",
                      "method": "setValue",
                      "args": [
                        "block_change_scout",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "ChangeCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ChangeCity.php",
      "properties": {
        "targetType": "all",
        "targetArgs": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "target",
            "actions"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "all"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "genSQLTrust": {
          "params": [
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "genSQLGeneric": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "getTargetCities": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": [
                        {
                          "kind": "return"
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "update",
                "args": [
                  "city",
                  "propertylookup",
                  "city IN %li",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {
        "AVAILABLE_KEY": {
          "pop": true,
          "agri": true,
          "comm": true,
          "secu": true,
          "trust": true,
          "def": true,
          "wall": true,
          "trade": true,
          "pop_max": true,
          "agri_max": true,
          "comm_max": true,
          "secu_max": true,
          "def_max": true,
          "wall_max": true
        },
        "REGEXP_PERCENT": "/^(\\d+(\\.\\d+)?)%$/",
        "REGEXP_MATH": "/^([\\+\\-\\/\\*])(\\d+(\\.\\d+)?)$/"
      }
    },
    "CreateAdminNPC": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/CreateAdminNPC.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "CreateManyNPC": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/CreateManyNPC.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "npcCount",
            "fillCnt"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "generateNPC": {
          "params": [
            "env",
            "cnt"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "무": "0.333",
                  "지": "0.333",
                  "무지": "0.334"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "DeleteEvent": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/DeleteEvent.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "event",
                  "id = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "FinishNationBetting": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/FinishNationBetting.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "bettingID"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bettingHelper",
                "method": "giveReward",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "InvaderEnding": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/InvaderEnding.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<L><b>【이벤트】</b></>이민족을 모두 소탕했습니다!"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<L><b>【이벤트】</b></>중원은 당분간 태평성대를 누릴 것입니다."
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<L><b>【이벤트】</b></>중원은 이민족에 의해 혼란에 빠졌습니다."
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<L><b>【이벤트】</b></>백성은 언젠가 영웅이 나타나길 기다립니다."
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "setValue",
                "args": [
                  "isunited",
                  "3"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "event",
                  "id = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "LostUniqueItem": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/LostUniqueItem.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "lostProb"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<R><b>【망실】</b></>어떤 아이템도 잃지 않았습니다!"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "MergeInheritPointRank": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/MergeInheritPointRank.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "points",
                "method": "allocate",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "rank_data",
                  "`type` = %s",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "rank_data",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "query",
                "args": [
                  "UPDATE `rank_data` D SET `value` = (SELECT SUM(`value`) FROM `rank_data` S WHERE S.general_id = D.general_id AND S.`type` IN %ls) WHERE D.`type` = %s",
                  {},
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "query",
                "args": [
                  "UPDATE `rank_data` D SET `value` = (SELECT `value` FROM `rank_data` S WHERE S.general_id = D.general_id AND S.`type` = %s) WHERE D.`type` = %s",
                  "propertylookup",
                  "propertylookup"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "NewYear": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/NewYear.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "<S>모두들 즐거운 게임 하고 계신가요? ^^ <Y>매너 있는 플레이</> 부탁드리고, 게임보단 <L>건강이 먼저</>란점, 잊지 마세요!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "nation != 0"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "NoticeToHistoryLog": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/NoticeToHistoryLog.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "msg",
            "type"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "propertylookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "OpenNationBetting": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/OpenNationBetting.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "nationCnt",
            "bonusPoint"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "천통국"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "uasort",
                "args": [
                  "variable",
                  "closure"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "openBetting",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "event",
                  {
                    "target": "DESTROY_NATION",
                    "priority": "1000"
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "insert",
                      "args": [
                        "ng_betting",
                        {
                          "general_id": "0",
                          "betting_type": "[-1]"
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<B><b>【내기】</b></>중원의 강자를 점치는 <C>내기</>가 진행중입니다! 호사가의 참여를 기다립니다!"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<B><b>【내기】</b></>천하통일 후보를 점치는 <C>내기</>가 진행중입니다! 호사가의 참여를 기다립니다!"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "ProcessIncome": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ProcessIncome.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "resource"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "processGoldIncome": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "<W><b>【지급】</b></>봄이 되어 봉록에 따라 자금이 지급됩니다."
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushAdminLog",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "processRiceIncome": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "<W><b>【지급】</b></>가을이 되어 봉록에 따라 군량이 지급됩니다."
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushAdminLog",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "processGoldIncome",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "processRiceIncome",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "ProcessSemiAnnual": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ProcessSemiAnnual.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "resource"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "popIncrease": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "trust": "50"
                  },
                  "nation=0"
                ]
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "dead": "0"
                  },
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "popIncrease",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {},
                  "%b > 1000",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "%b > 1000",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "ProcessWarIncome": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ProcessWarIncome.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "dead": "0"
                  },
                  true
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "ProvideNPCTroopLeader": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ProvideNPCTroopLeader.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {
        "MaxNPCTroopLeaderCnt": {
          "1": "0",
          "2": "1",
          "3": "3",
          "4": "4",
          "5": "6",
          "6": "7",
          "7": "9"
        }
      }
    },
    "RaiseDisaster": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RaiseDisaster.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "state": "0"
                  },
                  "state <= 10"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "1": "0",
                  "4": "0.25",
                  "7": "0.25",
                  "10": "0"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "1": {},
                  "4": {},
                  "7": {},
                  "10": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "4": {},
                  "7": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": [
                  {
                    "kind": "foreach"
                  }
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "RaiseInvader": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RaiseInvader.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "npcEachCount",
            "specAvg",
            "tech",
            "dex"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "moveCapital": {
          "params": [
            "rng"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "officer_level": "1",
                    "officer_city": "0"
                  },
                  "officer_city in %li",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "nation": "0",
                    "front": "0",
                    "supply": "1"
                  },
                  "city in %li",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "refreshNationStaticInfo",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "setValue",
                "args": [
                  "isunited",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "war": "0",
                    "scout": "0"
                  },
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "gold": "999999",
                    "rice": "999999"
                  },
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "event",
                  {
                    "target": "month",
                    "priority": "1000"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "1",
                    "term": "24"
                  },
                  "(me IN %li AND you IN %li) OR (me IN %li AND you IN %li)",
                  "variable",
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "diplomacy",
                  {
                    "state": "7",
                    "term": "480"
                  },
                  "(me IN %li AND you IN %li)",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "def_max": "100000",
                    "wall_max": "10000"
                  },
                  "nation IN %li",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "<L><b>【이벤트】</b></>각지의 이민족들이 <M>궐기</>합니다!"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "<L><b>【이벤트】</b></>중원의 전 국가에 <M>선전포고</> 합니다!"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalHistoryLog",
                "args": [
                  "<L><b>【이벤트】</b></>이민족의 기세는 그 누구도 막을 수 없을듯 합니다!"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "setValue",
                "args": [
                  "block_change_scout",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "plock",
                  {
                    "plock": "0"
                  },
                  true
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "RaiseNPCNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RaiseNPCNation.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "calcAvgNationCity": {
          "params": [
            "rng",
            "cities"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "usort",
                "args": [
                  "variable",
                  "closure"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcAvgNationGeneralCnt": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "sort",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcAvgTech": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildNation": {
          "params": [
            "rng",
            "nationID",
            "tech",
            "baseCity",
            "avgCity",
            "genCnt",
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "trust": "100"
                }
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "무": "1",
                  "지": "1"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationObj",
                "method": "build",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "ruler",
                "method": "build",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationObj",
                "method": "addGeneral",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationObj",
                "method": "postBuild",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  "variable",
                  "city = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "shuffle_assoc",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalHistoryLog",
                      "args": [
                        "<L><b>【공지】</b></>공백지에 임의의 국가가 생성되었습니다."
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {
        "CITY_KEYS": {},
        "MIN_DIST_USERNATION": "3",
        "MIN_DIST_NPCNATION": "2"
      }
    },
    "RandomizeCityTradeRate": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RandomizeCityTradeRate.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {}
    },
    "RegNPC": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RegNPC.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "affinity",
            "name",
            "picturePath",
            "nationID",
            "locatedCity",
            "leadership",
            "strength",
            "intel",
            "officerLevel",
            "birth",
            "death",
            "ego",
            "char",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "RegNeutralNPC": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/RegNeutralNPC.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "affinity",
            "name",
            "picturePath",
            "nationID",
            "locatedCity",
            "leadership",
            "strength",
            "intel",
            "birth",
            "death",
            "ego",
            "char",
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "ResetOfficerLock": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/ResetOfficerLock.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "chief_set": "0"
                  },
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "officer_set": "0"
                  },
                  true
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "UnblockScoutAction": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/UnblockScoutAction.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "blockChangeScout"
          ],
          "statements": []
        },
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "scout": "0"
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "gameStor",
                      "method": "setValue",
                      "args": [
                        "block_change_scout",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "UpdateCitySupply": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/UpdateCitySupply.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "supply": "1"
                  },
                  "nation=0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {
                    "supply": "0"
                  },
                  "nation!=0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "city",
                        {
                          "supply": "1"
                        },
                        "city IN %li",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  {},
                  "supply = 0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {
                          "officer_level": "1",
                          "officer_city": "0"
                        },
                        "officer_city IN %li",
                        "call"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "city",
                        {
                          "nation": "0",
                          "officer_set": "0",
                          "conflict": "{}",
                          "term": "0",
                          "front": "0"
                        },
                        "city IN %li",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "UpdateNationLevel": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action/UpdateNationLevel.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {}
    },
    "Action": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Action.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "env"
          ],
          "statements": []
        },
        "build": {
          "params": [
            "actionArgs"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ConstBool": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/ConstBool.php",
      "properties": {
        "fixedResult": true
      },
      "methods": {
        "__construct": {
          "params": [
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        }
      },
      "constants": {}
    },
    "Date": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/Date.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "cmp",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        }
      },
      "constants": {
        "AVAILABLE_CMP": {
          "==": true,
          "!=": true,
          "<": true,
          ">": true,
          "<=": true,
          ">=": true
        }
      }
    },
    "DateRelative": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/DateRelative.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "cmp",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        }
      },
      "constants": {
        "AVAILABLE_CMP": {
          "==": true,
          "!=": true,
          "<": true,
          ">": true,
          "<=": true,
          ">=": true
        }
      }
    },
    "Interval": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/Interval.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "args"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        }
      },
      "constants": {}
    },
    "Logic": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/Logic.php",
      "properties": {
        "mode": "and",
        "conditions": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "mode",
            "conditions"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "switch"
            },
            {
              "kind": "throw"
            }
          ]
        },
        "logicNot": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": "not"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "logicAnd": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        },
        "logicOr": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        },
        "logicXor": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        }
      },
      "constants": {
        "AVAILABLE_LOGIC_NAME": {
          "not": false,
          "and": true,
          "or": true,
          "xor": true
        }
      }
    },
    "RemainNation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition/RemainNation.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "cmp",
            "cnt"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "eval": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "chain": {}
          }
        }
      },
      "constants": {
        "AVAILABLE_CMP": {
          "==": true,
          "!=": true,
          "<": true,
          ">": true,
          "<=": true,
          ">=": true
        }
      }
    },
    "Condition": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Condition.php",
      "properties": {},
      "methods": {
        "eval": {
          "params": [
            "env"
          ],
          "statements": []
        },
        "build": {
          "params": [
            "conditionChain"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "reset",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "while"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "_eval": {
          "params": [
            "arg",
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        }
      },
      "constants": {}
    },
    "Engine": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/Engine.php",
      "properties": {},
      "methods": {},
      "constants": {}
    },
    "EventHandler": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Event/EventHandler.php",
      "properties": {
        "actions": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "rawCondition",
            "rawActions"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "tryRunEvent": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GameConstBase": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameConstBase.php",
      "properties": {
        "title": "삼국지 모의전투 PHP HiDCHe",
        "banner": "KOEI의 이미지를 사용, 응용하였습니다 / 제작 : HideD(hided62@gmail.com) / <a href='https://sam.hided.net/wiki/hidche/credit' target='_blank' style='color:white;text-decoration: underline;'>Credit</a>",
        "mapName": "che",
        "unitSet": "che",
        "develrate": "50",
        "upgradeLimit": "30",
        "dexLimit": "1000000",
        "defaultAtmosLow": "40",
        "defaultTrainLow": "40",
        "defaultAtmosHigh": "70",
        "defaultTrainHigh": "70",
        "maxAtmosByCommand": "100",
        "maxTrainByCommand": "100",
        "maxAtmosByWar": "150",
        "maxTrainByWar": "110",
        "trainDelta": "30",
        "atmosDelta": "30",
        "atmosSideEffectByTraining": "1",
        "trainSideEffectByAtmosTurn": "1",
        "sabotageDefaultProb": "0.35",
        "sabotageProbCoefByStat": "300",
        "sabotageDefenceCoefByGeneralCnt": "0.04",
        "sabotageDamageMin": "100",
        "sabotageDamageMax": "800",
        "basecolor": "#000044",
        "basecolor2": "#225500",
        "basecolor3": "#660000",
        "basecolor4": "#330000",
        "armperphase": "500",
        "basegold": "0",
        "baserice": "2000",
        "minNationalGold": "0",
        "minNationalRice": "0",
        "exchangeFee": "0.01",
        "adultAge": "14",
        "minPushHallAge": "40",
        "maxDedLevel": "30",
        "maxTechLevel": "12",
        "maxBetrayCnt": "9",
        "incDefSettingChange": "3",
        "maxDefSettingChange": "9",
        "refreshLimitCoef": "10",
        "maxLevel": "255",
        "techLevelIncYear": "5",
        "initialAllowedTechLevel": "1",
        "basePopIncreaseAmount": "5000",
        "expandCityPopIncreaseAmount": "100000",
        "expandCityDevelIncreaseAmount": "2000",
        "expandCityWallIncreaseAmount": "2000",
        "expandCityDefaultCost": "60000",
        "expandCityCostCoef": "500",
        "minAvailableRecruitPop": "30000",
        "defaultCityWall": "1000",
        "initialNationGenLimit": "10",
        "defaultMaxGeneral": "500",
        "defaultMaxNation": "55",
        "defaultMaxGenius": "5",
        "defaultStartYear": "180",
        "joinRuinedNPCProp": "0.1",
        "defaultGold": "1000",
        "defaultRice": "1000",
        "coefAidAmount": "10000",
        "maxResourceActionAmount": "10000",
        "resourceActionAmountGuide": {},
        "generalMinimumGold": "0",
        "generalMinimumRice": "500",
        "maxTurn": "30",
        "maxChiefTurn": "12",
        "statGradeLevel": "5",
        "openingPartYear": "3",
        "joinActionLimit": "12",
        "bornMinStatBonus": "3",
        "bornMaxStatBonus": "5",
        "availableNationType": {},
        "neutralNationType": "che_중립",
        "defaultSpecialDomestic": "None",
        "availableSpecialDomestic": {},
        "optionalSpecialDomestic": {},
        "defaultSpecialWar": "None",
        "availableSpecialWar": {},
        "optionalSpecialWar": {},
        "neutralPersonality": "None",
        "availablePersonality": {},
        "optionalPersonality": {},
        "maxUniqueItemLimit": {},
        "minTurnDieOnPrestart": "2",
        "uniqueTrialCoef": "1",
        "maxUniqueTrialProb": "0.25",
        "maxAvailableWarSettingCnt": "10",
        "incAvailableWarSettingCnt": "2",
        "minGoldRequiredWhenBetting": "500",
        "minMonthToAllowInheritItem": "4",
        "inheritBornSpecialPoint": "6000",
        "inheritBornTurntimePoint": "2500",
        "inheritBornCityPoint": "1000",
        "inheritBornStatPoint": "1000",
        "inheritItemUniqueMinPoint": "5000",
        "inheritItemRandomPoint": "3000",
        "inheritBuffPoints": {},
        "inheritSpecificSpecialPoint": "4000",
        "inheritResetAttrPointBase": {},
        "inheritCheckOwnerPoint": "1000",
        "defaultInstantAction": {
          "dieOnPrestart": true,
          "buildNationCandidate": true
        },
        "availableInstantAction": {
          "dieOnPrestart": true,
          "buildNationCandidate": true
        },
        "allItems": {
          "horse": {
            "che_명마_01_노기": "0",
            "che_명마_02_조랑": "0",
            "che_명마_03_노새": "0",
            "che_명마_04_나귀": "0",
            "che_명마_05_갈색마": "0",
            "che_명마_06_흑색마": "0",
            "che_명마_07_백마": "2",
            "che_명마_07_기주마": "2",
            "che_명마_07_오환마": "2",
            "che_명마_07_백상": "2",
            "che_명마_08_양주마": "2",
            "che_명마_08_흉노마": "2",
            "che_명마_09_과하마": "2",
            "che_명마_09_의남백마": "2",
            "che_명마_10_대완마": "2",
            "che_명마_10_옥추마": "2",
            "che_명마_11_서량마": "2",
            "che_명마_11_화종마": "2",
            "che_명마_12_사륜거": "2",
            "che_명마_12_옥란백용구": "2",
            "che_명마_13_절영": "2",
            "che_명마_13_적로": "2",
            "che_명마_14_적란마": "2",
            "che_명마_14_조황비전": "2",
            "che_명마_15_한혈마": "2",
            "che_명마_15_적토마": "2"
          },
          "weapon": {
            "che_무기_01_단도": "0",
            "che_무기_02_단궁": "0",
            "che_무기_03_단극": "0",
            "che_무기_04_목검": "0",
            "che_무기_05_죽창": "0",
            "che_무기_06_소부": "0",
            "che_무기_07_동추": "2",
            "che_무기_07_철편": "2",
            "che_무기_07_철쇄": "2",
            "che_무기_07_맥궁": "2",
            "che_무기_08_유성추": "2",
            "che_무기_08_철질여골": "2",
            "che_무기_09_쌍철극": "2",
            "che_무기_09_동호비궁": "2",
            "che_무기_10_삼첨도": "2",
            "che_무기_10_대부": "2",
            "che_무기_11_고정도": "2",
            "che_무기_11_이광궁": "2",
            "che_무기_12_철척사모": "2",
            "che_무기_12_칠성검": "2",
            "che_무기_13_사모": "2",
            "che_무기_13_양유기궁": "2",
            "che_무기_14_언월도": "2",
            "che_무기_14_방천화극": "2",
            "che_무기_15_청홍검": "2",
            "che_무기_15_의천검": "2"
          },
          "book": {
            "che_서적_01_효경전": "0",
            "che_서적_02_회남자": "0",
            "che_서적_03_변도론": "0",
            "che_서적_04_건상역주": "0",
            "che_서적_05_여씨춘추": "0",
            "che_서적_06_사민월령": "0",
            "che_서적_07_위료자": "2",
            "che_서적_07_사마법": "2",
            "che_서적_07_한서": "2",
            "che_서적_07_논어": "2",
            "che_서적_08_전론": "2",
            "che_서적_08_사기": "2",
            "che_서적_09_장자": "2",
            "che_서적_09_역경": "2",
            "che_서적_10_시경": "2",
            "che_서적_10_구국론": "2",
            "che_서적_11_상군서": "2",
            "che_서적_11_춘추전": "2",
            "che_서적_12_산해경": "2",
            "che_서적_12_맹덕신서": "2",
            "che_서적_13_관자": "2",
            "che_서적_13_병법24편": "2",
            "che_서적_14_한비자": "2",
            "che_서적_14_오자병법": "2",
            "che_서적_15_노자": "2",
            "che_서적_15_손자병법": "2"
          },
          "item": {
            "che_치료_환약": "0",
            "che_저격_수극": "0",
            "che_사기_탁주": "0",
            "che_훈련_청주": "0",
            "che_계략_이추": "0",
            "che_계략_향낭": "0",
            "che_의술_정력견혈산": "1",
            "che_의술_청낭서": "1",
            "che_의술_태평청령": "1",
            "che_의술_상한잡병론": "1",
            "che_보물_도기": "1",
            "che_조달_주판": "1",
            "che_내정_납금박산로": "1",
            "che_전략_평만지장도": "1",
            "che_숙련_동작": "1",
            "che_명성_구석": "1",
            "che_척사_오악진형도": "1",
            "che_격노_구정신단경": "1",
            "che_징병_낙주": "1",
            "che_저격_매화수전": "1",
            "che_저격_비도": "1",
            "che_위압_조목삭": "1",
            "che_공성_묵자": "1",
            "che_집중_전국책": "1",
            "che_환술_논어집해": "1",
            "che_진압_박혁론": "1",
            "che_부적_태현청생부": "1",
            "che_저지_삼황내문": "1",
            "che_행동_서촉지형도": "1",
            "che_간파_노군입산부": "1",
            "che_불굴_상편": "1",
            "che_약탈_옥벽": "1",
            "che_농성_주서음부": "1",
            "che_농성_위공자병법": "1",
            "che_계략_육도": "1",
            "che_계략_삼략": "1",
            "che_상성보정_과실주": "1",
            "che_능력치_지력_이강주": "1",
            "che_능력치_무력_두강주": "1",
            "che_능력치_통솔_보령압주": "1",
            "che_훈련_철벽서": "1",
            "che_훈련_단결도": "1",
            "che_사기_춘화첩": "1",
            "che_사기_초선화": "1",
            "che_회피_태평요술": "1",
            "che_필살_둔갑천서": "1"
          }
        },
        "availableGeneralCommand": {
          "개인": {},
          "내정": {},
          "군사": {},
          "인사": {},
          "계략": {},
          "국가": {}
        },
        "availableChiefCommand": {
          "휴식": {},
          "인사": {},
          "외교": {},
          "특수": {},
          "전략": {},
          "기타": {}
        },
        "retirementYear": "80",
        "targetGeneralPool": "RandomNameGeneral",
        "generalPoolAllowOption": {},
        "randGenFirstName": {},
        "randGenMiddleName": {},
        "randGenLastName": {},
        "npcBanMessageProb": "0.01",
        "npcSeizureMessageProb": "0.01",
        "npcMessageFreqByDay": "4",
        "defaultInitialEvents": {},
        "defaultEvents": {},
        "staticEventHandlers": {}
      },
      "methods": {},
      "constants": {}
    },
    "GameUnitConstBase": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstBase.php",
      "properties": {
        "constID": {},
        "constName": {},
        "constType": {},
        "typeData": {}
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "getBuildData": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "addGameUnit": {
          "params": [
            "unitType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "all": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "allType": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "byID": {
          "params": [
            "id"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "byName": {
          "params": [
            "name"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "byType": {
          "params": [
            "type"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generate",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "_generateOptional": {
          "params": [],
          "statements": [
            {
              "kind": "noop"
            }
          ]
        },
        "_generate": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_generateOptional",
                "args": []
              }
            }
          ]
        }
      },
      "constants": {
        "T_CASTLE": "0",
        "T_FOOTMAN": "1",
        "T_ARCHER": "2",
        "T_CAVALRY": "3",
        "T_WIZARD": "4",
        "T_SIEGE": "5",
        "T_MISC": "6",
        "CREWTYPE_CASTLE": "1000",
        "DEFAULT_CREWTYPE": "1100"
      }
    },
    "BaseGameUnitConstraint": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/BaseGameUnitConstraint.php",
      "properties": {},
      "methods": {
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": []
        },
        "getInfo": {
          "params": [],
          "statements": []
        }
      },
      "constants": {}
    },
    "Impossible": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/Impossible.php",
      "properties": {},
      "methods": {
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "불가능"
        }
      },
      "constants": {}
    },
    "ReqChief": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqChief.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "군주 및 수뇌부만 가능"
        }
      },
      "constants": {}
    },
    "ReqCities": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqCities.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqCities"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReqCitiesWithCityLevel": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqCitiesWithCityLevel.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqCityLevel",
            "reqCities"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReqHighLevelCities": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqHighLevelCities.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqCityLevel",
            "reqCityCount"
          ],
          "statements": []
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReqMinRelYear": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqMinRelYear.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqMinRelYear"
          ],
          "statements": []
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReqNationAux": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqNationAux.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqNationAuxKey",
            "cmp",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "switch"
            },
            {
              "kind": "switch"
            }
          ]
        }
      },
      "constants": {
        "AVAILABLE_CMP": {
          "==": true,
          "!=": true,
          "<": true,
          ">": true,
          "<=": true,
          ">=": true
        }
      }
    },
    "ReqNotChief": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqNotChief.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "군주 및 수뇌부는 불가"
        }
      },
      "constants": {}
    },
    "ReqRegions": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqRegions.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqRegions"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ReqTech": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitConstraint/ReqTech.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "reqTech"
          ],
          "statements": []
        },
        "test": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GameUnitDetail": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GameUnitDetail.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "id",
            "armType",
            "name",
            "attack",
            "defence",
            "speed",
            "avoid",
            "magicCoef",
            "cost",
            "rice",
            "reqConstraints",
            "attackCoef",
            "defenceCoef",
            "info",
            "initSkillTrigger",
            "phaseSkillTrigger",
            "iActionList"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "reqTech": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "reqRegions": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "reqCities": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getShortName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "riceWithTech": {
          "params": [
            "tech",
            "crew"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "costWithTech": {
          "params": [
            "tech",
            "crew"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getAttackCoef": {
          "params": [
            "opposeCrewType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getDefenceCoef": {
          "params": [
            "opposeCrewType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAttack": {
          "params": [
            "general",
            "tech"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "10"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedDefence": {
          "params": [
            "general",
            "tech"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCriticalRatio": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.4"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pickScore": {
          "params": [
            "tech"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "isValid": {
          "params": [
            "general",
            "ownCities",
            "ownRegions",
            "relativeYear",
            "tech",
            "nationAux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStrategic": {
          "params": [
            "turnType",
            "varType",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "onArbitraryAction": {
          "params": [
            "general",
            "rng",
            "actionType",
            "phase",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "General": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/General.php",
      "properties": {
        "activatedSkill": {},
        "logActivatedSkill": {},
        "isFinished": false,
        "itemObjs": {},
        "calcCache": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "raw",
            "rawRank",
            "rawAccessLog",
            "city",
            "nation",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLogger",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "staticlookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "setItem": {
          "params": [
            "itemKey",
            "itemCode"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "deleteItem",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "deleteItem": {
          "params": [
            "itemKey"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "variable",
                  "None"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "getItem": {
          "params": [
            "itemKey"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getItems": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPersonality": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getSpecialDomestic": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getSpecialWar": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getLastTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "_setResultTurn": {
          "params": [
            "resultTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getResultTurn": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "clearActivatedSkill": {
          "params": [],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getActivatedSkillLog": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "hasActivatedSkill": {
          "params": [
            "skillName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "activateSkill": {
          "params": [
            "skillNames"
          ],
          "statements": [
            {
              "kind": "foreach"
            }
          ]
        },
        "deactivateSkill": {
          "params": [
            "skillNames"
          ],
          "statements": [
            {
              "kind": "foreach"
            }
          ]
        },
        "getInfo": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": ""
        },
        "getLogger": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNationTypeObj": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getOfficerLevelObj": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCrewTypeObj": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "hasPenalty": {
          "params": [
            "penaltyKey"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPenaltyList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "calcRecentWarTurn": {
          "params": [
            "turnTerm"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getReservedTurn": {
          "params": [
            "turnIdx",
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getReservedTurnList": {
          "params": [
            "turnIdxFrom",
            "turnIdxTo",
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getStatValue": {
          "params": [
            "statName",
            "withInjury",
            "withIActionObj",
            "withStatAdjust",
            "useFloor"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getLeadership": {
          "params": [
            "withInjury",
            "withIActionObj",
            "withStatAdjust",
            "useFloor"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getStrength": {
          "params": [
            "withInjury",
            "withIActionObj",
            "withStatAdjust",
            "useFloor"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getIntel": {
          "params": [
            "withInjury",
            "withIActionObj",
            "withStatAdjust",
            "useFloor"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "addDex": {
          "params": [
            "crewType",
            "exp",
            "affectTrainAtmos"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.9"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVar",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            }
          ]
        },
        "addExperience": {
          "params": [
            "experience",
            "affectTrigger"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVar",
                "args": [
                  "experience",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateVar",
                "args": [
                  "explevel",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        "addDedication": {
          "params": [
            "dedication",
            "affectTrigger"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVar",
                "args": [
                  "dedication",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateVar",
                "args": [
                  "dedlevel",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        "updateVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": true
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "kill": {
          "params": [
            "db",
            "sendDyingMessage",
            "dyingMessage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "setAuxVar",
                            "args": [
                              "inheritRandomUnique",
                              "nullkeyword"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "userLogger",
                            "method": "push",
                            "args": [
                              "call",
                              "inheritPoint"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "setAuxVar",
                            "args": [
                              "inheritSpecificSpecialWar",
                              "nullkeyword"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "userLogger",
                            "method": "push",
                            "args": [
                              "call",
                              "inheritPoint"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "increaseInheritancePoint",
                            "args": [
                              "staticlookup",
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "increaseRankVar",
                            "args": [
                              "staticlookup",
                              "unary"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritPointManager",
                      "method": "mergeTotalInheritancePoint",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritPointManager",
                      "method": "applyInheritanceUser",
                      "args": [
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "nextRuler",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setVar",
                      "args": [
                        "officer_level",
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {
                          "troop": "0"
                        },
                        "troop=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "delete",
                      "args": [
                        "troop",
                        "troop_leader=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGlobalActionLog",
                            "args": [
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGlobalActionLog",
                            "args": [
                              "call"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "select_pool",
                  {},
                  "general_id=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "storeOldGeneral",
                "args": [
                  "variable",
                  "call",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "general",
                  "no=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "general_turn",
                  "general_id=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "rank_data",
                  "general_id=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "general_access_log",
                  "general_id=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "call"
                ]
              }
            }
          ]
        },
        "rebirth": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritPointManager",
                      "method": "mergeTotalInheritancePoint",
                      "args": [
                        "variable",
                        true
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "inheritPointManager",
                      "method": "applyInheritanceUser",
                      "args": [
                        "variable",
                        true
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVarWithLimit",
                "args": [
                  "leadership",
                  "0.85",
                  "10"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVarWithLimit",
                "args": [
                  "strength",
                  "0.85",
                  "10"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVarWithLimit",
                "args": [
                  "intel",
                  "0.85",
                  "10"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "injury",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "experience",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dedication",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "age",
                  "20"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "specage",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setVar",
                "args": [
                  "specage2",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dex1",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dex2",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dex3",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dex4",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "dex5",
                  "0.5"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGlobalActionLog",
                "args": [
                  "encapsed"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralActionLog",
                "args": [
                  "나이가 들어 <R>은퇴</>하고 자손에게 자리를 물려줍니다.",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "logger",
                "method": "pushGeneralHistoryLog",
                "args": [
                  "나이가 들어 은퇴하고, 자손에게 관직을 물려줌"
                ]
              }
            }
          ]
        },
        "increaseRankVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "remove",
                      "args": [
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "setRankVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "remove",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "getRankVar": {
          "params": [
            "key",
            "defaultValue"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getAccessLogVar": {
          "params": [
            "key",
            "defaultValue"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setVar",
                      "args": [
                        "last_turn",
                        "call"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        "variable",
                        "no=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "update",
                            "args": [
                              "rank_data",
                              {},
                              "general_id = %i",
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "flushUpdateValues",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "checkStatChange": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getActionList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPreTurnExecuteTriggerList": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStrategic": {
          "params": [
            "turnType",
            "varType",
            "value"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcNationalIncome": {
          "params": [
            "type",
            "amount"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "onArbitraryAction": {
          "params": [
            "general",
            "rng",
            "actionType",
            "phase",
            "aux"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getBattleInitSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBattlePhaseSkillTriggerList": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "createObjListFromDB": {
          "params": [
            "generalIDList",
            "column",
            "queryMode"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "createObjFromDB": {
          "params": [
            "generalID",
            "column",
            "queryMode"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getReservedTurnByGeneralList": {
          "params": [
            "generalList",
            "turnIdx",
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getReservedTurnListByGeneralList": {
          "params": [
            "generalList",
            "turnIdxFrom",
            "turnIdxTo",
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInheritancePoint": {
          "params": [
            "key",
            "aux",
            "forceCalc"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setInheritancePoint": {
          "params": [
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "increaseInheritancePoint": {
          "params": [
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "mergeTotalInheritancePoint": {
          "params": [
            "isRebirth"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "mergeTotalInheritancePoint",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "GeneralAI": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralAI.php",
      "properties": {
        "reqUpdateInstance": true
      },
      "methods": {
        "updateInstance": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setRawCity",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "calcDiplomacyState",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "__construct": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getGeneralObj": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "calcGenType": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcDiplomacyState": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": false
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": false
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "calcWarRoute": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "do부대전방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "calcWarRoute",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do부대후방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do부대구출발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do부대유저장후방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장후방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장구출발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "구출실패",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장전방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장내정발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC후방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC구출발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC전방발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC내정발령": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장긴급포상": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "gold": {},
                  "rice": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do유저장포상": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "gold": {},
                  "rice": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC긴급포상": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "gold": {},
                  "rice": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC포상": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "gold": {},
                  "rice": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC몰수": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "gold": {},
                  "rice": {}
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do불가침제의": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "arsort",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "nationStor",
                "method": "setValue",
                "args": [
                  "resp_assist_try",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do선전포고": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "4"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do천도": {
          "params": [
            "lastTurn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": {}
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": true
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "queue",
                "method": "enqueue",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "arsort",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do일반내정": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              },
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "unary",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ],
                                  "else": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do긴급내정": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do전쟁내정": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "call",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ],
                                  "else": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              },
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "unary",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ],
                                  "else": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "call",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ],
                                  "else": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "call",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ],
                                  "else": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "offsetlookup",
                                        "value": {}
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do금쌀구매": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do징병": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "throw"
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "variable",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "variable",
                                  "value": null
                                }
                              },
                              {
                                "kind": "if",
                                "condition": {
                                  "test": "bin",
                                  "then": [
                                    {
                                      "kind": "expressionstatement",
                                      "assign": {
                                        "target": "variable",
                                        "value": null
                                      }
                                    }
                                  ],
                                  "else": []
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do전투준비": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": {}
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": {}
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do소집해제": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do출병": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC헌납": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do후방워프": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        "propertylookup"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        "string"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "method": "LogText",
                                  "args": [
                                    "encapsed",
                                    {}
                                  ]
                                }
                              },
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "LogText",
                      "args": [
                        "encapsed",
                        "call"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do전방워프": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationGeneral",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do내정워프": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do귀환": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do집합": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "70"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "killturn",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "_setGeneralCommand",
                "args": [
                  "variable",
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do방랑군이동": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "unknown",
                            "method": "setRawCity",
                            "args": [
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "movingTargetCityID",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do거병": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do해산": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setAuxVar",
                "args": [
                  "movingTargetCityID",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do건국": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setAuxVar",
                "args": [
                  "movingTargetCityID",
                  "nullkeyword"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do선양": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "do국가선택": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "doNPC사망대비": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": [
                  {
                    "kind": "return"
                  }
                ]
              }
            }
          ]
        },
        "do중립": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "categorizeNationCities": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "categorizeNationGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "expressionstatement"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "chooseNationTurn": {
          "params": [
            "reservedCommand"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateInstance",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationGeneral",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "categorizeNationCities",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setAuxVar",
                            "args": [
                              "use_auto_nation_turn",
                              "1"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "choosePromotion",
                                  "args": []
                                }
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "chooseTexRate",
                                  "args": []
                                }
                              },
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "chooseGoldBillRate",
                                  "args": []
                                }
                              }
                            ],
                            "else": []
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "chooseTexRate",
                                  "args": []
                                }
                              },
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "this",
                                  "method": "chooseRiceBillRate",
                                  "args": []
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "reserved"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "neutral"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "chooseInstantNationTurn": {
          "params": [
            "reservedCommand"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateInstance",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "chooseGeneralTurn": {
          "params": [
            "reservedCommand"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateInstance",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "msg",
                      "method": "send",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "defence_train",
                        "80"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "do선양"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "killturn",
                              "1"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "사망"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "do집합"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "do예약턴"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "do요양"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "do거병"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "do국가선택"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "do중립"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "재야유저"
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "propertylookup",
                                  "value": "do건국"
                                }
                              },
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "do방랑군이동"
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "propertylookup",
                                  "value": "do해산"
                                }
                              },
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "do중립"
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcNationDevelopedRate": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "all": "0"
                }
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "chooseNonLordPromotion": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        {},
                        "nation=%i",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "calcCityDevelRate": {
          "params": [
            "city"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {
            "trust": {},
            "pop": {},
            "agri": {},
            "comm": {},
            "secu": {},
            "def": {},
            "wall": {}
          }
        },
        "choosePromotion": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "36"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "uasort",
                      "args": [
                        "variable",
                        "closure"
                      ]
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "uasort",
                "args": [
                  "variable",
                  "closure"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "nation",
                        {},
                        "nation=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "chooseTexRate": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "15"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {
                    "war": "0"
                  },
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "chooseGoldBillRate": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "chooseRiceBillRate": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "t무장": "1",
        "t지장": "2",
        "t통솔장": "4",
        "d평화": "0",
        "d선포": "1",
        "d징병": "2",
        "d직전": "3",
        "d전쟁": "4"
      }
    },
    "GeneralBase": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralBase.php",
      "properties": {
        "raw": {},
        "prohibitedDirectUpdateVars": {
          "leadership": "1",
          "power": "1",
          "intel": "1",
          "nation": "2",
          "officer_level": "1",
          "special": "1",
          "special2": "1",
          "personal": "1",
          "horse": "1",
          "weapon": "1",
          "book": "1",
          "item": "1"
        }
      },
      "methods": {
        "initLogger": {
          "params": [
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getTurnTime": {
          "params": [
            "short"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNPCType": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRawCity": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setRawCity": {
          "params": [
            "city"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCityID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNationID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getStaticNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getLogger": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getDex": {
          "params": [
            "crewType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getRankVar": {
          "params": [
            "key",
            "defaultValue"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": []
        },
        "mergeQueryColumn": {
          "params": [
            "reqColumns",
            "queryMode"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "switch"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "switch"
            }
          ]
        }
      },
      "constants": {
        "TURNTIME_FULL": "0",
        "TURNTIME_HMS": "1",
        "TURNTIME_HM": "2"
      }
    },
    "GeneralLite": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralLite.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "raw",
            "rawRank",
            "city",
            "nation",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initLogger",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ]
              }
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        "variable",
                        "no=%i",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "update",
                            "args": [
                              "rank_data",
                              {},
                              "general_id = %i",
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": true
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "flushUpdateValues",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "createObjListFromDB": {
          "params": [
            "generalIDList",
            "column",
            "queryMode"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "createObjFromDB": {
          "params": [
            "generalID",
            "column",
            "queryMode"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "RandomNameGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralPool/RandomNameGeneral.php",
      "properties": {},
      "methods": {
        "getPoolName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "임의 장수명"
        },
        "occupyGeneralName": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "select_pool",
                  {},
                  "unique_name = %s",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pickGeneral1FromPool": {
          "params": [
            "db",
            "rng",
            "owner",
            "prefix"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pickGeneralFromPool": {
          "params": [
            "db",
            "rng",
            "owner",
            "pickCnt",
            "prefix"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "for"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "delete",
                      "args": [
                        "select_pool",
                        {},
                        "(reserved_until < %s OR reserved_until IS NULL) AND general_id IS null",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "insert",
                      "args": [
                        "select_pool",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "initPool": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "noop"
            }
          ]
        }
      },
      "constants": {}
    },
    "SPoolUnderU30": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralPool/SPoolUnderU30.php",
      "properties": {},
      "methods": {
        "getPoolName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "체30기 이벤트"
        },
        "initPool": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "select_pool",
                  "variable"
                ]
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "che_도시치료": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralTrigger/che_도시치료.php",
      "properties": {
        "priority": "10010"
      },
      "methods": {
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "updateVar",
                      "args": [
                        "injury",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "activateSkill",
                      "args": [
                        "pre.부상경감",
                        "pre.치료"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "<C>의술</>을 펼쳐 스스로 치료합니다!",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general",
                  {
                    "injury": "0"
                  },
                  "no IN %li",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_병력군량소모": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralTrigger/che_병력군량소모.php",
      "properties": {
        "priority": "50000"
      },
      "methods": {
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "increaseVar",
                            "args": [
                              "rice",
                              "unary"
                            ]
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "update",
                            "args": [
                              "city",
                              {},
                              "city=%i",
                              "call"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "crew",
                              "0"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "rice",
                              "0"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "unknown",
                            "method": "pushGeneralActionLog",
                            "args": [
                              "군량이 모자라 병사들이 <R>소집해제</>되었습니다!",
                              "staticlookup"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "activateSkill",
                            "args": [
                              "pre.소집해제"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "activateSkill",
                      "args": [
                        "pre.병력군량소모"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_부상경감": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralTrigger/che_부상경감.php",
      "properties": {
        "priority": "10000"
      },
      "methods": {
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "injury",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "activateSkill",
                      "args": [
                        "pre.부상경감"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "che_아이템치료": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralTrigger/che_아이템치료.php",
      "properties": {
        "priority": "9990",
        "injuryTarget": "10"
      },
      "methods": {
        "__construct": {
          "params": [
            "general",
            "injuryTarget"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "updateVar",
                      "args": [
                        "injury",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "activateSkill",
                      "args": [
                        "pre.부상경감",
                        "pre.치료"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "deleteItem",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "GeneralTriggerCaller": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GeneralTriggerCaller.php",
      "properties": {},
      "methods": {
        "checkValidTrigger": {
          "params": [
            "trigger"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "GlobalMenu": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/GlobalMenu.php",
      "properties": {},
      "methods": {
        "getMenu": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "version": "2"
      }
    },
    "InheritancePointManager": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/InheritancePointManager.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritanceKey",
                "method": "put",
                "args": [
                  "staticlookup",
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getInstance": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "staticlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInheritancePointType": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInheritancePointFromAll": {
          "params": [
            "generals",
            "key",
            "aux",
            "forceCalc"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "array_map",
                      "args": [
                        "arrowfunc",
                        "variable"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getInheritancePoint": {
          "params": [
            "general",
            "key",
            "aux",
            "forceCalc"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "switch"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setInheritancePoint": {
          "params": [
            "general",
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "variable",
                  {}
                ]
              }
            }
          ]
        },
        "increaseInheritancePointRaw": {
          "params": [
            "ownerID",
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "propertylookup",
                  {}
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "increaseInheritancePoint": {
          "params": [
            "general",
            "key",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "clearInheritancePoint": {
          "params": [
            "ownerID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "propertylookup",
                  "variable"
                ]
              }
            }
          ]
        },
        "mergeTotalInheritancePoint": {
          "params": [
            "general",
            "isRebirth"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheValues",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "cacheAll",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oldInheritStor",
                "method": "setValue",
                "args": [
                  "encapsed",
                  "call"
                ]
              }
            }
          ]
        },
        "applyInheritanceUser": {
          "params": [
            "ownerID",
            "isRebirth"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "push",
                "args": [
                  "encapsed",
                  "inheritPoint"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "userLogger",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "inheritStor",
                "method": "setValue",
                "args": [
                  "propertylookup",
                  {}
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "LastTurn": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/LastTurn.php",
      "properties": {
        "command": "휴식"
      },
      "methods": {
        "__construct": {
          "params": [
            "command",
            "arg",
            "term",
            "seq"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setCommand",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setArg",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setTerm",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setSeq",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "fromRaw": {
          "params": [
            "raw"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "fromJson": {
          "params": [
            "json"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setCommand": {
          "params": [
            "command"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "휴식"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getCommand": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setArg": {
          "params": [
            "arg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getArg": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setTerm": {
          "params": [
            "term"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getTerm": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setSeq": {
          "params": [
            "seq"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getSeq": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "toRaw": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "toJson": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "duplicate": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "Message": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Message.php",
      "properties": {
        "isInboxMail": false,
        "sendCnt": "0"
      },
      "methods": {
        "__construct": {
          "params": [
            "msgType",
            "src",
            "dest",
            "msg",
            "date",
            "validUntil",
            "msgOption"
          ],
          "statements": []
        },
        "setSentInfo": {
          "params": [
            "mailbox",
            "messageID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "do"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "toArray": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "buildFromArray": {
          "params": [
            "row"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "objMessage",
                "method": "setSentInfo",
                "args": [
                  "offsetlookup",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "isValidMailBox": {
          "params": [
            "mailbox"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "getMessageByID": {
          "params": [
            "messageID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getMessagesFromMailBox": {
          "params": [
            "mailbox",
            "msgType",
            "limit",
            "fromSeq"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "mailbox = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "type = %s",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "valid_until > %s",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "where",
                      "method": "add",
                      "args": [
                        "id >= %i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getMessagesFromMailBoxOld": {
          "params": [
            "mailbox",
            "msgType",
            "toSeq",
            "limit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "mailbox = %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "type = %s",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "valid_until > %s",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "where",
                "method": "add",
                "args": [
                  "id < %i",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "deleteMsg": {
          "params": [
            "msgID",
            "generalID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "prev5min",
                "method": "sub",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "hide": true,
                  "silence": true,
                  "overwrite": {}
                }
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "if",
                          "condition": {
                            "test": "bin",
                            "then": [
                              {
                                "kind": "expressionstatement",
                                "call": {
                                  "object": "msgObj2",
                                  "method": "invalidate",
                                  "args": [
                                    "nullkeyword",
                                    "boolean"
                                  ]
                                }
                              },
                              {
                                "kind": "expressionstatement",
                                "assign": {
                                  "target": "offsetlookup",
                                  "value": {}
                                }
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "in1min",
                "method": "add",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "msgObj",
                "method": "invalidate",
                "args": [
                  "nullkeyword",
                  "boolean"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newMsg",
                "method": "send",
                "args": [
                  "boolean"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "sendRaw": {
          "params": [
            "mailbox"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "message",
                  {}
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "sendToSender": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ],
                      "else": [
                        {
                          "kind": "return"
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "sendToReceiver": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "unknown",
                            "method": "update",
                            "args": [
                              "general",
                              {
                                "newmsg": "1"
                              },
                              "no=%i",
                              "propertylookup"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "unknown",
                            "method": "update",
                            "args": [
                              "general",
                              {
                                "newmsg": "1"
                              },
                              "nation = %i AND (officer_level = 12 OR permission IN ('ambassador', 'auditor')) ",
                              "propertylookup"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "sendPrivateMsgAsNotice": {
          "params": [
            "targets",
            "msg"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "send": {
          "params": [
            "sendDestOnly"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "1"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": false
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "2"
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "invalidate": {
          "params": [
            "newMsgOption",
            "hideMsg"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "call",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "삭제된 메시지입니다."
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "message",
                  {},
                  "id=%i",
                  "propertylookup"
                ]
              }
            }
          ]
        },
        "agreeMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "declineMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        }
      },
      "constants": {
        "MAILBOX_PUBLIC": "9999",
        "MAILBOX_NATIONAL": "9000"
      }
    },
    "MessageTarget": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/MessageTarget.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "generalID",
            "generalName",
            "nationID",
            "nationName",
            "color",
            "icon"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "buildFromArray": {
          "params": [
            "arr"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "재야"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "#000000"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildQuick": {
          "params": [
            "generalID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildFromGeneralObj": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildSystemTarget": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "toArray": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "toArrayLight": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "ObjectTrigger": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ObjectTrigger.php",
      "properties": {},
      "methods": {
        "getPriority": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setPriority": {
          "params": [
            "newPriority"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "action": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": []
        },
        "getUniqueID": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": ""
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "PRIORITY_MIN": "0",
        "PRIORITY_BEGIN": "10000",
        "PRIORITY_PRE": "20000",
        "PRIORITY_BODY": "30000",
        "PRIORITY_POST": "40000",
        "PRIORITY_FINAL": "50000"
      }
    },
    "RaiseInvaderMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/RaiseInvaderMessage.php",
      "properties": {
        "valid": true
      },
      "methods": {
        "__construct": {
          "params": [
            "msgType",
            "src",
            "dest",
            "msg",
            "date",
            "validUntil",
            "msgOption"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": [
                  "variadic"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "checkMessageValidation": {
          "params": [
            "receiverID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "agreeMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "천하통일이 되지 않았습니다."
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "_declineMessage",
                            "args": []
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "method": "sendPrivateMsgAsNotice",
                            "args": [
                              "propertylookup",
                              "encapsed"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "invaderAction",
                "method": "run",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "_declineMessage": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "invalidate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "declineMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "sendPrivateMsgAsNotice",
                      "args": [
                        "propertylookup",
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "_declineMessage",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildRaiseInvaderMessage": {
          "params": [
            "destGeneralID",
            "date"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "ACCEPTED": "1",
        "INVALID": "0"
      }
    },
    "ResetHelper": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ResetHelper.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "clearDB": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "mkdir",
                      "args": [
                        "bin",
                        "0775"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "mkdir",
                      "args": [
                        "bin",
                        "0775"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "mkdir",
                      "args": [
                        "bin",
                        "0775"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "closeServer",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "mkdir",
                "args": [
                  "bin",
                  "0775"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "mkdir",
                "args": [
                  "bin",
                  "0775"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "gameStor",
                      "method": "resetCache",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "copy",
                "args": [
                  "bin",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "while"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "while"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "bettingStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "voteStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "delete",
                "args": [
                  "storage",
                  "namespace LIKE \"general_%\""
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "lastExecuteStor",
                "method": "resetValues",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        },
        "buildScenario": {
          "params": [
            "turnterm",
            "sync",
            "scenario",
            "fiction",
            "extend",
            "block_general_create",
            "npcmode",
            "show_img_level",
            "tournament_trig",
            "join_mode",
            "turntime",
            "autorun_user"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "trigger_error",
                      "args": [
                        "이미 GameConst가 호출되어있습니다",
                        "name"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "scenarioObj",
                "method": "buildConf",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "scenarioObj",
                "method": "initFull",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "plock",
                  {
                    "type": "GAME",
                    "plock": "1"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "plock",
                  {
                    "type": "TOURNAMENT",
                    "plock": "1"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "plock",
                  {
                    "type": "ETC",
                    "plock": "1"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "build",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "generateFileUsingSimpleTemplate",
                "args": [
                  "bin",
                  "bin",
                  {},
                  true
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "1"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "isunited": "0",
                  "msg": "공지사항",
                  "refreshLimit": "30000",
                  "tournament": "0"
                }
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "ng_games",
                  {}
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "scenarioObj",
                "method": "build",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "plock",
                  {
                    "plock": "0"
                  },
                  true
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "LogHistory",
                "args": [
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "closeServer",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {
            "result": true
          }
        }
      },
      "constants": {}
    },
    "GeneralBuilder": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Scenario/GeneralBuilder.php",
      "properties": {
        "owner": "0",
        "imgsvr": "0",
        "npc": "2",
        "prefixList": {
          "0": "",
          "1": "ⓝ",
          "2": "ⓝ",
          "3": "ⓜ",
          "4": "ⓖ",
          "5": "㉥",
          "6": "ⓤ",
          "9": "ⓞ"
        },
        "gold": "1000",
        "rice": "1000",
        "dex1": "0",
        "dex2": "0",
        "dex3": "0",
        "dex4": "0",
        "dex5": "0",
        "aux": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "rng",
            "name",
            "isDynamicImageSvr",
            "picturePath",
            "nationID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setPicture": {
          "params": [
            "imgsvr",
            "picturePath"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setOwner": {
          "params": [
            "owner"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setOwnerName": {
          "params": [
            "ownerName"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNationID": {
          "params": [
            "nationID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setSpecialOption": {
          "params": [
            "option"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setSpecialSingle": {
          "params": [
            "special"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "return"
            }
          ]
        },
        "setSpecial": {
          "params": [
            "specialDomestic",
            "specialWar"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setOfficerLevel": {
          "params": [
            "level"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNPCText": {
          "params": [
            "text"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setEgo": {
          "params": [
            "ego"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setAffinity": {
          "params": [
            "affinity"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setNPCType": {
          "params": [
            "npcType"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setCustomPrefix": {
          "params": [
            "prefix"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setStat": {
          "params": [
            "leadership",
            "strength",
            "intel"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setSpecYear": {
          "params": [
            "specAge",
            "specAge2"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setExpDed": {
          "params": [
            "experience",
            "dedication"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setMoney": {
          "params": [
            "gold",
            "rice"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setCityID": {
          "params": [
            "cityID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setCity": {
          "params": [
            "city",
            "ignoreError"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "unary",
                            "then": [
                              {
                                "kind": "throw"
                              }
                            ],
                            "else": [
                              {
                                "kind": "return"
                              }
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "try"
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getStat": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "setAuxVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "unset"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setKillturn": {
          "params": [
            "killturn"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setDex": {
          "params": [
            "footman",
            "archer",
            "cavalry",
            "wizard",
            "siege"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setLifeSpan": {
          "params": [
            "birth",
            "death"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setGoldRice": {
          "params": [
            "gold",
            "rice"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "fillRandomStat": {
          "params": [
            "pickTypeList",
            "pickedType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "setStat",
                "args": [
                  "variable",
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "fillRemainSpecAsZero": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "propertylookup",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "1"
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "0"
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "5"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "fillRemainSpecAsRandom": {
          "params": [
            "pickTypeList",
            "avgGen",
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "fillRandomStat",
                      "args": [
                        "variable",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "do"
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "propertylookup",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "1"
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "0"
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "setDex",
                      "args": [
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup",
                        "offsetlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getCityID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNationID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralID": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralRawName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getGeneralName": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getBirthYear": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getDeathYear": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "build": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "try"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGlobalActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "default.jpg"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "default.jpg"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement"
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "general",
                  {
                    "dedlevel": "1",
                    "crew": "0",
                    "train": "0",
                    "atmos": "0",
                    "belong": "0",
                    "makelimit": "0"
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "general_turn",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "rank_data",
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "Nation": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Scenario/Nation.php",
      "properties": {
        "cities": {},
        "generals": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "rng",
            "id",
            "name",
            "color",
            "gold",
            "rice",
            "infoText",
            "tech",
            "type",
            "nationLevel",
            "cities"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "setID": {
          "params": [
            "id"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getID": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "build": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0"
                    }
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "can_국기변경": "1"
                }
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": "1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "nation",
                  {
                    "gennum": "0",
                    "bill": "100",
                    "rate": "15",
                    "scout": "0",
                    "war": "0",
                    "strategic_cmd_limit": "24",
                    "surlimit": "72"
                  }
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "city",
                        {},
                        "city IN %li",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "insert",
                      "args": [
                        "diplomacy",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "addGeneral": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "postBuild": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "nation",
                  {},
                  "nation=%i",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {
                          "officer_level": "12"
                        },
                        "no=%i",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insertIgnore",
                "args": [
                  "nation_turn",
                  "variable"
                ]
              }
            }
          ]
        },
        "getBrief": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "Scenario": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Scenario.php",
      "properties": {
        "iconPath": ".",
        "tmpGeneralQueue": {},
        "initBasic": false,
        "initOK": false
      },
      "methods": {
        "generateGeneral": {
          "params": [
            "rawGeneral",
            "initFull",
            "npcType"
          ],
          "statements": [
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "initLite": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {
                  "month": "0"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            }
          ]
        },
        "initFull": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {
                  "month": "0"
                }
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getGameConf": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "__construct": {
          "params": [
            "rng",
            "scenarioIdx",
            "lazyInit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "getGameConf",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "initFull",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getScenarioIdx": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getYear": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getTitle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getIconPath": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNPC": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLite",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNPCex": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLite",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNPCneutral": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLite",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getNation": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLite",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getMapTheme": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getUnitSet": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getScenarioBrief": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initLite",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "buildGenerals": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initFull",
                "args": []
              }
            },
            {
              "kind": "try"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "offsetlookup",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildDiplomacy": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initFull",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "addGameConf": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            }
          ]
        },
        "buildConf": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "generatePHPClassFile",
                "args": [
                  "bin",
                  "propertylookup",
                  "GameConstBase",
                  "sammo"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "copy",
                "args": [
                  "encapsed",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "copy",
                "args": [
                  "encapsed",
                  "bin"
                ]
              }
            }
          ]
        },
        "build": {
          "params": [
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "initPool",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "initFull",
                "args": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "flushCache",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "buildDiplomacy",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushGlobalHistoryLog",
                "args": [
                  "propertylookup",
                  "offsetlookup",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "insert",
                      "args": [
                        "event",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "refreshNationStaticInfo",
                "args": []
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "getAllScenarios": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "ScoutMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ScoutMessage.php",
      "properties": {
        "validScout": true
      },
      "methods": {
        "__construct": {
          "params": [
            "msgType",
            "src",
            "dest",
            "msg",
            "date",
            "validUntil",
            "msgOption"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "__construct",
                "args": [
                  "variadic"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": false
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "checkScoutMessageValidation": {
          "params": [
            "receiverID"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "agreeMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "_declineMessage",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "call"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "run",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "commandObj",
                "method": "setNextAvailable",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "invalidate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "invalidateAll",
                "args": [
                  "propertylookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newMsg",
                "method": "send",
                "args": [
                  true
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "invalidateAll": {
          "params": [
            "generalID",
            "exceptMsgID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "unset"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            }
          ]
        },
        "_declineMessage": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "invalidate",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "newMsg",
                "method": "send",
                "args": [
                  true
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "declineMessage": {
          "params": [
            "receiverID",
            "reason"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "_declineMessage",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "buildScoutMessage": {
          "params": [
            "srcGeneralID",
            "destGeneralID",
            "reason",
            "date"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": "같은 장수에게 등용장을 보낼 수 없습니다"
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": "군주에게 등용장을 보낼 수 없습니다"
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": "재야 상태일 때에는 등용장을 보낼 수 없습니다"
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": "같은 소속의 장수에게 등용장을 보낼 수 없습니다"
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {
                  "action": "scout"
                }
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "ACCEPTED": "1",
        "INVALID": "0"
      }
    },
    "ServerDefaultEnv": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ServerDefaultEnv.php",
      "properties": {
        "maxGeneralsPerMinute": "1000"
      },
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        }
      },
      "constants": {}
    },
    "ServerEnv": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ServerEnv.php",
      "properties": {},
      "methods": {},
      "constants": {}
    },
    "ServerTool": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/ServerTool.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "changeServerTerm": {
          "params": [
            "turnterm",
            "ignoreLock"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "for"
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "method": "unlock",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "pushGlobalHistoryLog",
                "args": [
                  {}
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "unlock",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "SpecialityHelper": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/SpecialityHelper.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": []
        },
        "getDomesticClassByName": {
          "params": [
            "type"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "staticlookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarClassByName": {
          "params": [
            "type"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "staticlookup",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "unary",
                      "then": [
                        {
                          "kind": "throw"
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcCondGeneric": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcCondDexterity": {
          "params": [
            "rng",
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getSpecialDomesticList": {
          "params": [
            "onlyAvailable"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getSpecialWarList": {
          "params": [
            "onlyAvailable"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "foreach"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "pickSpecialDomestic": {
          "params": [
            "rng",
            "general",
            "prevSpecials"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "pickSpecialWar": {
          "params": [
            "rng",
            "general",
            "prevSpecials"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "variable",
                      "then": [
                        {
                          "kind": "return"
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "throw"
            }
          ]
        }
      },
      "constants": {
        "DISABLED": "0x1",
        "STAT_LEADERSHIP": "0x2",
        "STAT_STRENGTH": "0x4",
        "STAT_INTEL": "0x8",
        "ARMY_FOOTMAN": "0x100",
        "ARMY_ARCHER": "0x200",
        "ARMY_CAVALRY": "0x400",
        "ARMY_WIZARD": "0x800",
        "ARMY_SIEGE": "0x1000",
        "REQ_DEXTERITY": "0x4000",
        "STAT_NOT_LEADERSHIP": "0x20000",
        "STAT_NOT_STRENGTH": "0x40000",
        "STAT_NOT_INTEL": "0x80000",
        "WEIGHT_NORM": "1",
        "WEIGHT_PERCENT": "2"
      }
    },
    "event_부대발령즉시집합": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/StaticEvent/event_부대발령즉시집합.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "general",
            "destGeneral",
            "env",
            "params"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "db",
                      "method": "update",
                      "args": [
                        "general",
                        {},
                        "no IN %li",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "city",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_부대탑승즉시이동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/StaticEvent/event_부대탑승즉시이동.php",
      "properties": {},
      "methods": {
        "run": {
          "params": [
            "general",
            "destGeneral",
            "env",
            "params"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "applyDB",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "StaticEventHandler": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/StaticEventHandler.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "handleEvent": {
          "params": [
            "general",
            "destGeneral",
            "eventType",
            "env",
            "params"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "foreach"
            }
          ]
        }
      },
      "constants": {}
    },
    "Target": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/Target.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "generalID",
            "nationID"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "buildFromArray": {
          "params": [
            "arr"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "toArray": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "DyingMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TextDecoration/DyingMessage.php",
      "properties": {
        "defaultMessage": "<Y>;name;</>;이; <R>사망</>했습니다."
      },
      "methods": {
        "getMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getScenarioNPCMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getUtilNPCMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "initMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "__construct": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "initMessageList",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getText": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "SightseeingMessage": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TextDecoration/SightseeingMessage.php",
      "properties": {},
      "methods": {
        "getMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "initMessageList": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "staticlookup",
                "value": null
              }
            }
          ]
        },
        "__construct": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "initMessageList",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "pickAction": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {
        "IncExp": "0x1",
        "IncHeavyExp": "0x2",
        "IncLeadership": "0x10",
        "IncStrength": "0x20",
        "IncIntel": "0x40",
        "IncGold": "0x100",
        "IncRice": "0x200",
        "DecGold": "0x400",
        "DecRice": "0x800",
        "Wounded": "0x1000",
        "HeavyWounded": "0x2000"
      }
    },
    "TriggerCaller": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TriggerCaller.php",
      "properties": {
        "triggerListByPriority": {}
      },
      "methods": {
        "checkValidTrigger": {
          "params": [
            "trigger"
          ],
          "statements": []
        },
        "isEmpty": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "__construct": {
          "params": [
            "triggerList"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "method": "ksort",
                      "args": [
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "append": {
          "params": [
            "trigger"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "ksort",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "merge": {
          "params": [
            "other"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "while"
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "fire": {
          "params": [
            "rng",
            "env",
            "arg"
          ],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "TriggerInheritBuff": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TriggerInheritBuff.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "inheritBuffList"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcOpposeStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {
        "WAR_AVOID_RATIO": "warAvoidRatio",
        "WAR_CRITICAL_RATIO": "warCriticalRatio",
        "WAR_MAGIC_TRIAL_PROB": "warMagicTrialProb",
        "DOMESTIC_SUCCESS_PROB": "domesticSuccessProb",
        "DOMESTIC_FAIL_PROB": "domesticFailProb",
        "OPPOSE_WAR_AVOID_RATIO": "warAvoidRatioOppose",
        "OPPOSE_WAR_CRITICAL_RATIO": "warCriticalRatioOppose",
        "OPPOSE_WAR_MAGIC_TRIAL_PROB": "warMagicTrialProbOppose",
        "MAX_STEP": "5",
        "BUFF_KEY_MAP": {},
        "CALC_DOMESTIC": {},
        "CALC_STAT": {},
        "CALC_OPPOSE_STAT": {},
        "BUFF_KEY_TEXT": {},
        "DOMESTIC_TARGET": {
          "상업": "1",
          "농업": "1",
          "치안": "1",
          "성벽": "1",
          "수비": "1",
          "민심": "1",
          "인구": "1",
          "기술": "1"
        }
      }
    },
    "TriggerOfficerLevel": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TriggerOfficerLevel.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "general",
            "nationLevel"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getLbonus": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "onCalcDomestic": {
          "params": [
            "turnType",
            "varType",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "if",
                          "condition": {
                            "test": "call",
                            "then": [
                              {
                                "kind": "return"
                              }
                            ],
                            "else": []
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "onCalcStat": {
          "params": [
            "general",
            "statName",
            "value",
            "aux"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiplier": {
          "params": [
            "unit"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "1.07"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.93"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        }
      },
      "constants": {}
    },
    "TurnExecutionHelper": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/TurnExecutionHelper.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "__destruct": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "applyDB",
                "args": []
              }
            }
          ]
        },
        "applyDB": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "applyDB",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "getGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "preprocessCommand": {
          "params": [
            "rng",
            "env"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "caller",
                "method": "merge",
                "args": [
                  "new"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "caller",
                "method": "fire",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            }
          ]
        },
        "processBlocked": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "killturn",
                        "unary",
                        "0"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "logger",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "encapsed"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "processNationCommand": {
          "params": [
            "rng",
            "commandObj"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "return"
            }
          ]
        },
        "processCommand": {
          "params": [
            "rng",
            "commandObj",
            "autorunMode"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "clearActivatedSkill",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "killturn",
                        "unary"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "updateTurnTime": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "general_access_log",
                  {
                    "refresh_score": "0"
                  },
                  "general_id=%i",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "logger",
                            "method": "pushGlobalActionLog",
                            "args": [
                              "encapsed"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "killturn",
                              "bin"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "npc",
                              "call"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "owner",
                              "0"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "defence_train",
                              "80"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "setVar",
                            "args": [
                              "owner_name",
                              "nullkeyword"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "db",
                            "method": "delete",
                            "args": [
                              "general_access_log",
                              "general_id=%i",
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "applyDB",
                            "args": [
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "kill",
                            "args": [
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "return"
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "general",
                            "method": "applyDB",
                            "args": [
                              "variable"
                            ]
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "method": "CheckHall",
                            "args": [
                              "variable"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "rebirth",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setAuxVar",
                      "args": [
                        "nextTurnTimeBase",
                        "nullkeyword"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "turntime",
                  "variable"
                ]
              }
            }
          ]
        },
        "executeGeneralCommandUntil": {
          "params": [
            "date",
            "limitActionTime",
            "year",
            "month"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "runEventHandler": {
          "params": [
            "db",
            "gameStor",
            "eventTarget"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "foreach"
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "executeAllCommand": {
          "params": [
            "executed",
            "locked"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "cacheAll",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "checkDelay",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "updateOnline",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "CheckOverhead",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "60"
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "while"
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "turnDate",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "processTournament",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "processAuction",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "gameStor",
                "method": "resetCache",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "unlock",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "UserLogger": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/UserLogger.php",
      "properties": {
        "log": {}
      },
      "methods": {
        "__construct": {
          "params": [
            "userID",
            "year",
            "month",
            "autoFlush"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "gameStor",
                      "method": "cacheValues",
                      "args": [
                        {}
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "__destruct": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "this",
                      "method": "flush",
                      "args": []
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "rollback": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "flush": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "insert",
                "args": [
                  "user_record",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "push": {
          "params": [
            "text",
            "type"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "foreach"
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": {}
              }
            }
          ]
        }
      },
      "constants": {}
    },
    "InheritancePointType": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/VO/InheritancePointType.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "storeType",
            "pointCoeff",
            "info",
            "rebirthStoreCoeff"
          ],
          "statements": []
        }
      },
      "constants": {}
    },
    "VersionGitDynamic": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/VersionGitDynamic.php",
      "properties": {},
      "methods": {
        "getVersion": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "git describe --long --tags"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "exec",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "git branch --contains HEAD"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "exec",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "variable",
                            "value": null
                          }
                        },
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": null
                          }
                        }
                      ],
                      "else": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "offsetlookup",
                            "value": "unknown"
                          }
                        }
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getHash": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "git rev-parse HEAD"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "exec",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "__construct": {
          "params": [],
          "statements": []
        }
      },
      "constants": {}
    },
    "WarUnit": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnit.php",
      "properties": {
        "killedCurr": "0",
        "killed": "0",
        "deadCurr": "0",
        "dead": "0",
        "isAttacker": false,
        "currPhase": "0",
        "prePhase": "0",
        "bonusPhase": "0",
        "atmosBonus": "0",
        "trainBonus": "0",
        "warPowerMultiply": "1.0",
        "activatedSkill": {},
        "logActivatedSkill": {},
        "isFinished": false
      },
      "methods": {
        "__construct": {
          "params": [
            "rng",
            "general"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getRaw": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getVar": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "touchVar": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "updateVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "updateVarWithLimit": {
          "params": [
            "key",
            "value",
            "min",
            "max"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "increaseVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "increaseVarWithLimit": {
          "params": [
            "key",
            "value",
            "min",
            "max"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "multiplyVar": {
          "params": [
            "key",
            "value"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "multiplyVarWithLimit": {
          "params": [
            "key",
            "value",
            "min",
            "max"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getUpdatedValues": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "flushUpdateValues": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "flushUpdateValues",
                "args": []
              }
            }
          ]
        },
        "clearActivatedSkill": {
          "params": [],
          "statements": [
            {
              "kind": "foreach"
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": {}
              }
            }
          ]
        },
        "getActivatedSkillLog": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRawNation": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getNationVar": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getPhase": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRealPhase": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": "EMPTY"
        },
        "isAttacker": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCrewType": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCrewTypeName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCrewTypeShortName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getLogger": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getKilled": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getDead": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getKilledCurrentBattle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getDeadCurrentBattle": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getGeneral": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getMaxPhase": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "setPrePhase": {
          "params": [
            "phase"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "addPhase": {
          "params": [
            "phase"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "addBonusPhase": {
          "params": [
            "cnt"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "setOppose": {
          "params": [
            "oppose"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "clearActivatedSkill",
                "args": []
              }
            }
          ]
        },
        "getOppose": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPower": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getRawWarPower": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getWarPowerMultiply": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setWarPowerMultiply": {
          "params": [
            "multiply"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "multiplyWarPowerMultiply": {
          "params": [
            "multiply"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getComputedAttack": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedDefence": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "computeWarPower": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "1.0"
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setWarPowerMultiply",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "addTrain": {
          "params": [
            "train"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "addAtmos": {
          "params": [
            "atmos"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "addTrainBonus": {
          "params": [
            "trainBonus"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "addAtmosBonus": {
          "params": [
            "atmosBonus"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "getComputedTrain": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAtmos": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedCriticalRatio": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAvoidRatio": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "addWin": {
          "params": [],
          "statements": []
        },
        "addLose": {
          "params": [],
          "statements": []
        },
        "getDex": {
          "params": [
            "crewType"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "finishBattle": {
          "params": [],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "beginPhase": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "clearActivatedSkill",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "computeWarPower",
                "args": []
              }
            }
          ]
        },
        "hasActivatedSkill": {
          "params": [
            "skillName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "hasActivatedSkillOnLog": {
          "params": [
            "skillName"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "activateSkill": {
          "params": [
            "skillNames"
          ],
          "statements": [
            {
              "kind": "foreach"
            }
          ]
        },
        "deactivateSkill": {
          "params": [
            "skillNames"
          ],
          "statements": [
            {
              "kind": "foreach"
            }
          ]
        },
        "getHP": {
          "params": [],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        },
        "decreaseHP": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "increaseKilled": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "throw"
            }
          ]
        },
        "calcDamage": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryWound": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "continueWar": {
          "params": [
            "noRice"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        },
        "logBattleResult": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushBattleResultTemplate",
                "args": [
                  "variable",
                  "call"
                ]
              }
            }
          ]
        },
        "criticalDamage": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": {}
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "throw"
            }
          ]
        }
      },
      "constants": {}
    },
    "WarUnitCity": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitCity.php",
      "properties": {
        "onSiege": false
      },
      "methods": {
        "__construct": {
          "params": [
            "rng",
            "raw",
            "rawNation",
            "year",
            "month",
            "startYear"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "city",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "nation",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "initLogger",
                "args": [
                  "variable",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setCrewType",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": "5"
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "getCityTrainAtmos": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCityVar": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAttack": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedDefence": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "increaseKilled": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedTrain": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAtmos": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getHP": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setSiege": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": "0"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setCrewType",
                "args": [
                  "nullkeyword"
                ]
              }
            }
          ]
        },
        "isSiege": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getDex": {
          "params": [
            "crewType"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "decreaseHP": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVarWithLimit",
                "args": [
                  "wall",
                  "bin",
                  "0"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "continueWar": {
          "params": [
            "noRice"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "heavyDecreaseWealth": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "agri",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "comm",
                  "0.5"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "multiplyVar",
                "args": [
                  "secu",
                  "0.5"
                ]
              }
            }
          ]
        },
        "finishBattle": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "clearActivatedSkill",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateVar",
                "args": [
                  "def",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateVar",
                "args": [
                  "wall",
                  "call"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVarWithLimit",
                "args": [
                  "agri",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVarWithLimit",
                "args": [
                  "comm",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "increaseVarWithLimit",
                "args": [
                  "secu",
                  "unary",
                  "0"
                ]
              }
            }
          ]
        },
        "addConflict": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": false
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "1.05"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": {}
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "updateVar",
                "args": [
                  "conflict",
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "rollback",
                "args": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "db",
                "method": "update",
                "args": [
                  "city",
                  "variable",
                  "city=%i",
                  "offsetlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "flushUpdateValues",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "WarUnitGeneral": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitGeneral.php",
      "properties": {
        "killedPerson": "0",
        "deadPerson": "0"
      },
      "methods": {
        "__construct": {
          "params": [
            "rng",
            "general",
            "rawNation",
            "isAttacker"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "5"
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "5"
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "assign": {
                            "target": "propertylookup",
                            "value": "5"
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ]
              }
            }
          ]
        },
        "getName": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "getCityVar": {
          "params": [
            "key"
          ],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "setOppose": {
          "params": [
            "oppose"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "setOppose",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setVar",
                "args": [
                  "recent_war",
                  "variable"
                ]
              }
            }
          ]
        },
        "getMaxPhase": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "addTrain": {
          "params": [
            "train"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "increaseVarWithLimit",
                "args": [
                  "train",
                  "variable",
                  "0",
                  "staticlookup"
                ]
              }
            }
          ]
        },
        "addAtmos": {
          "params": [
            "atmos"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "variable",
                  "0",
                  "staticlookup"
                ]
              }
            }
          ]
        },
        "getDex": {
          "params": [
            "crewType"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedTrain": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAtmos": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedCriticalRatio": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "getComputedAvoidRatio": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.75"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "addWin": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseRankVar",
                      "args": [
                        "staticlookup",
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "multiplyVarWithLimit",
                      "args": [
                        "atmos",
                        "1.1",
                        "nullkeyword",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "multiplyVarWithLimit",
                      "args": [
                        "atmos",
                        "1.05",
                        "nullkeyword",
                        "staticlookup"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "addStatExp",
                "args": [
                  "1"
                ]
              }
            }
          ]
        },
        "addStatExp": {
          "params": [
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseVar",
                      "args": [
                        "intel_exp",
                        "variable"
                      ]
                    }
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "addLevelExp": {
          "params": [
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.8"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addExperience",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "addDedication": {
          "params": [
            "value"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "addDedication",
                "args": [
                  "variable"
                ]
              }
            }
          ]
        },
        "addLose": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "1"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "addStatExp",
                "args": [
                  "1"
                ]
              }
            }
          ]
        },
        "computeWarPower": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setWarPowerMultiply",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": {}
        },
        "getHP": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "addDex": {
          "params": [
            "crewType",
            "exp"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "addDex",
                "args": [
                  "variable",
                  "variable",
                  "boolean"
                ]
              }
            }
          ]
        },
        "decreaseHP": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "crew",
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.1"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "addDex",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "calcRiceConsumption": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.8"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.8"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "increaseKilled": {
          "params": [
            "damage"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "addLevelExp",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.8"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "addDex",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "propertylookup",
                      "value": null
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ]
        },
        "tryWound": {
          "params": [],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "activateSkill",
                "args": [
                  "부상"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "injury",
                  "call",
                  "nullkeyword",
                  "80"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "전투중 <R>부상</>당했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "continueWar": {
          "params": [
            "noRice"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": false
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": true
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        },
        "checkStatChange": {
          "params": [],
          "statements": [
            {
              "kind": "return"
            }
          ]
        },
        "finishBattle": {
          "params": [],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "clearActivatedSkill",
                "args": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseRankVar",
                "args": [
                  "staticlookup",
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseRankVar",
                      "args": [
                        "staticlookup",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "increaseRankVar",
                      "args": [
                        "staticlookup",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "updateVar",
                "args": [
                  "rice",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "updateVar",
                "args": [
                  "experience",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "updateVar",
                "args": [
                  "dedication",
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "checkStatChange",
                "args": []
              }
            }
          ]
        },
        "applyDB": {
          "params": [
            "db"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "flush",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ]
        }
      },
      "constants": {}
    },
    "WarActivateSkills": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/WarActivateSkills.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType",
            "isSelf",
            "activeSkills"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "propertylookup",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "activateSkill",
                      "args": [
                        "variadic"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "activateSkill",
                      "args": [
                        "variadic"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_격노발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_격노발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "variable",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "addBonusPhase",
                      "args": [
                        "1"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_격노시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_격노시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "activateSkill",
                      "args": [
                        "격노"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "deactivateSkill",
                      "args": [
                        "회피"
                      ]
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "self",
                            "method": "activateSkill",
                            "args": [
                              "진노"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_계략발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_계략발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_계략시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_계략시도.php",
      "properties": {
        "tableToGeneral": {
          "위보": {},
          "매복": {},
          "반목": {},
          "화계": {},
          "혼란": {}
        },
        "tableToCity": {
          "급습": {},
          "위보": {},
          "혼란": {}
        }
      },
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "3"
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": "0.7"
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "list",
                      "value": null
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "계략시도",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "activateSkill",
                      "args": [
                        "계략"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "activateSkill",
                      "args": [
                        "계략실패"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "offsetlookup",
                      "value": {}
                    }
                  }
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_계략실패": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_계략실패.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_궁병선제사격": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_궁병선제사격.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "특수",
                  "선제"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "activateSkill",
                      "args": [
                        "특수",
                        "선제"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "서로 <C>선제 사격</>을 주고 받았다!</>",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "서로 <C>선제 사격</>을 주고 받았다!</>",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "회피불가",
                  "필살불가",
                  "계략불가"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "activateSkill",
                "args": [
                  "회피불가",
                  "필살불가",
                  "격노불가",
                  "계략불가"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <R>선제 사격</>을 받았다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <C>선제 사격</>을 했다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_기병병종전투": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_기병병종전투.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "1.02"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "0.97"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_돌격지속": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_돌격지속.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "self",
                            "method": "addBonusPhase",
                            "args": [
                              "unary"
                            ]
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "addBonusPhase",
                "args": [
                  "1"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_반계발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_반계발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "list",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "variable"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_반계시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_반계시도.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType",
            "prob"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "반계"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "deactivateSkill",
                "args": [
                  "계략"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_방어력증가5p": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_방어력증가5p.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "bin"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_부상무효": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_부상무효.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "부상무효"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_선제사격발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_선제사격발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "multiplyWarPowerMultiply",
                      "args": [
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "서로 <C>선제 사격</>을 주고 받았다!</>",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "서로 <C>선제 사격</>을 주고 받았다!</>",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "회피불가",
                  "필살불가",
                  "계략불가"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "activateSkill",
                "args": [
                  "회피불가",
                  "필살불가",
                  "격노불가",
                  "계략불가"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <R>선제 사격</>을 받았다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <C>선제 사격</>을 했다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_선제사격시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_선제사격시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "특수",
                  "선제"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_성벽부상무효": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_성벽부상무효.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "부상무효"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_약탈발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_약탈발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "opposeGeneral",
                "method": "increaseVarWithLimit",
                "args": [
                  "gold",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "opposeGeneral",
                "method": "increaseVarWithLimit",
                "args": [
                  "rice",
                  "unary",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "gold",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVar",
                "args": [
                  "rice",
                  "variable"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "상대를 <C>약탈</>했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralActionLog",
                "args": [
                  "상대에게 <R>약탈</>당했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "encapsed",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "processConsumableItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_약탈시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_약탈시도.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType",
            "ratio",
            "theftRatio"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "약탈"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_위압발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_위압발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <R>위압</>받았다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대에게 <C>위압</>을 줬다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "setWarPowerMultiply",
                "args": [
                  "0"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "atmos",
                        "unary",
                        "40"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_위압시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_위압시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "위압"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "activateSkill",
                "args": [
                  "회피불가",
                  "필살불가",
                  "계략불가"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_저격발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_저격발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "상대를 <C>저격</>했다!",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "상대를 <C>저격</>했다!",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "상대에게 <R>저격</>당했다!",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "상대에게 <R>저격</>당했다!",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralActionLog",
                      "args": [
                        "성벽 수비대장을 <C>저격</>했다!",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "성벽 수비대장을 <C>저격</>했다!",
                        "staticlookup"
                      ]
                    }
                  }
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "increaseVarWithLimit",
                "args": [
                  "atmos",
                  "offsetlookup",
                  "0",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "injury",
                        "call",
                        "nullkeyword",
                        "80"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "processConsumableItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_저격시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_저격시도.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType",
            "ratio",
            "woundMin",
            "woundMax",
            "addAtmos"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "저격"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": null
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_저지발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_저지발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "addPhase",
                "args": [
                  "unary"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "oppose",
                      "method": "addBonusPhase",
                      "args": [
                        "unary"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대를 <C>저지</>했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "저지</>당했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "addDex",
                "args": [
                  "call",
                  "bin"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "addDex",
                "args": [
                  "call",
                  "variable"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "addLevelExp",
                      "args": [
                        "bin"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": "0.25"
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "increaseVarWithLimit",
                      "args": [
                        "rice",
                        "unary",
                        "0"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "setWarPowerMultiply",
                "args": [
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "setWarPowerMultiply",
                "args": [
                  "0"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    },
    "che_저지시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_저지시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "activateSkill",
                      "args": [
                        "특수",
                        "저지"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_전멸시페이즈증가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_전멸시페이즈증가.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "self",
                      "method": "addBonusPhase",
                      "args": [
                        "1"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "적군의 전멸에 <C>진격</>이 이어집니다!",
                        "staticlookup"
                      ]
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "unknown",
                      "method": "pushGeneralBattleDetailLog",
                      "args": [
                        "아군의 전멸에 상대의 <R>진격</>이 이어집니다!",
                        "staticlookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_전투치료발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_전투치료발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대가 <R>치료</>했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "<C>치료</>했다!",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "0.7"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "setVar",
                "args": [
                  "injury",
                  "0"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "processConsumableItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_전투치료시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_전투치료시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "치료"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_퇴각부상무효": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_퇴각부상무효.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "퇴각부상무효"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_필살강화_회피불가": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_필살강화_회피불가.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "activateSkill",
                "args": [
                  "회피불가"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_필살발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_필살발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "offsetlookup",
                "value": true
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대의 <R>필살</>공격!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "<C>필살</>공격!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "call"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_필살시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_필살시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "필살시도",
                  "필살"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_회피발동": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_회피발동.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "상대가 <R>회피</>했다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "<C>회피</>했다!</>",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "bin"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "che_회피시도": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/che_회피시도.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "회피시도",
                  "회피"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "event_충차아이템소모": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/event_충차아이템소모.php",
      "properties": {},
      "methods": {
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "expressionstatement",
                    "assign": {
                      "target": "variable",
                      "value": null
                    }
                  },
                  {
                    "kind": "if",
                    "condition": {
                      "test": "bin",
                      "then": [
                        {
                          "kind": "expressionstatement",
                          "call": {
                            "object": "this",
                            "method": "processConsumableItem",
                            "args": []
                          }
                        }
                      ],
                      "else": []
                    }
                  },
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "call",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "unknown",
                "method": "pushGeneralBattleDetailLog",
                "args": [
                  "<C>충차</>로 성벽을 공격합니다.",
                  "staticlookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "activateSkill",
                "args": [
                  "충차공격"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "general",
                "method": "setAuxVar",
                "args": [
                  "staticlookup",
                  "bin"
                ]
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "능력치변경": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/능력치변경.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "raiseType",
            "variable",
            "operator",
            "value",
            "limitMin",
            "limitMax"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "unary",
                "then": [
                  {
                    "kind": "throw"
                  }
                ],
                "else": []
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "method": "assert",
                "args": [
                  "bin",
                  "General만 발동 가능"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "variable",
                "value": null
              }
            },
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "expressionstatement",
                    "call": {
                      "object": "general",
                      "method": "setVar",
                      "args": [
                        "propertylookup",
                        "propertylookup"
                      ]
                    }
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "processConsumableItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "전투력보정": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTrigger/전투력보정.php",
      "properties": {},
      "methods": {
        "__construct": {
          "params": [
            "unit",
            "attackerWarPowerMultiplier",
            "defenderWarPowerMultiplier"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "assign": {
                "target": "propertylookup",
                "value": null
              }
            }
          ]
        },
        "actionWar": {
          "params": [
            "self",
            "oppose",
            "selfEnv",
            "opposeEnv"
          ],
          "statements": [
            {
              "kind": "expressionstatement",
              "call": {
                "object": "self",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "oppose",
                "method": "multiplyWarPowerMultiply",
                "args": [
                  "propertylookup"
                ]
              }
            },
            {
              "kind": "expressionstatement",
              "call": {
                "object": "this",
                "method": "processConsumableItem",
                "args": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": true
        }
      },
      "constants": {}
    },
    "WarUnitTriggerCaller": {
      "file": "/mnt/d/open-sam-backend/sam/hwe/sammo/WarUnitTriggerCaller.php",
      "properties": {},
      "methods": {
        "checkValidTrigger": {
          "params": [
            "trigger"
          ],
          "statements": [
            {
              "kind": "if",
              "condition": {
                "test": "bin",
                "then": [
                  {
                    "kind": "return"
                  }
                ],
                "else": []
              }
            },
            {
              "kind": "return"
            }
          ],
          "return": false
        }
      },
      "constants": {}
    }
  },
  "functions": {},
  "constants": {},
  "arrays": {}
}
